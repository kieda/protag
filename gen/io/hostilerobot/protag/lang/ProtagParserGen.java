/* ProtagParserGen.java */
/* Generated By:JavaCC: Do not edit this line. ProtagParserGen.java */
package io.hostilerobot.protag.lang;

import java.util.*;
import java.io.*;
import io.hostilerobot.protag.lang.ProtagLexer;
import io.hostilerobot.protag.lang.ProtagSymbol;
import io.hostilerobot.protag.lang.ProtagTokenType;
import io.hostilerobot.protag.lang.ast.*;
import io.hostilerobot.protag.lang.ast.impl.*;import org.apache.commons.math.fraction.Fraction;

class ProtagParserGen implements ProtagParserGenConstants {
    public ProtagParserGen(ProtagLexer lexer) {
        this((TokenManager)lexer);
        token = new StartToken();
    }

    public void ReInit(ProtagLexer lexer) {
        this.ReInit((TokenManager) lexer);
        token = new StartToken();
    }

  final public IProtagSequence program() throws ParseException {IProtagSequence result = new ProtagSequence();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case WHITESPACE:
    case NATURAL:
    case PNAME:
    case JPATH_START:
    case FPATH_START:
    case PLUS:
    case MINUS:
    case MAP_START:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:
    case COMMENT:{
      result = ProtagSequence(result, null);
      break;
      }
    default:
      jj_la1[0] = jj_gen;
      ;
    }
    jj_consume_token(0);
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

//private yapping_ ::= Properties|(item yapping_?)
  final public IProtagSequence ProtagSequence(IProtagSequence result, IProtagProperties context) throws ParseException {IProtagProperties properties;
    ProtagNode item;
    if (jj_2_2(2147483647)) {
      properties = ProtagProperties(context == null ? new ProtagProperties() : context);
if(context == null) {
            result.getItems().addFirst(properties);
        }
        {if ("" != null) return result;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case WHITESPACE:
      case NATURAL:
      case PNAME:
      case JPATH_START:
      case FPATH_START:
      case PLUS:
      case MINUS:
      case MAP_START:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:
      case COMMENT:{
        item = item();
        if (jj_2_1(2147483647)) {
          ProtagSequence(result, context);
        } else {
          ;
        }
if(item != null) {
            result.getItems().addFirst(item);
        }
        {if ("" != null) return result;}
        break;
        }
      default:
        jj_la1[1] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode item() throws ParseException {ProtagNode item = null;
    LProtagLineComment lineComment;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case NATURAL:
    case PNAME:
    case JPATH_START:
    case FPATH_START:
    case PLUS:
    case MINUS:
    case MAP_START:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      item = unboundedData();
{if ("" != null) return item;}
      break;
      }
    case COMMENT:{
      lineComment = ProtagLineComment();
// todo - add lineComment to meta table
        {if ("" != null) return null;}
      break;
      }
    case WHITESPACE:{
      jj_consume_token(WHITESPACE);
{if ("" != null) return null;}
      break;
      }
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode baseData() throws ParseException {ProtagNode result;
    if (jj_2_3(2147483647)) {
      result = ProtagPath();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case JPATH_START:{
        result = JavaPath();
        break;
        }
      case FPATH_START:{
        result = FilePath();
        break;
        }
      default:
        jj_la1[3] = jj_gen;
        if (jj_2_4(2147483647)) {
          result = ProtagPathSegment();
        } else {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case PRECEDENCE_START:{
            result = ProtagPrecedence();
            break;
            }
          case MAP_START:{
            result = ProtagMap();
            break;
            }
          case LIST_START:{
            result = ProtagList();
            break;
            }
          default:
            jj_la1[4] = jj_gen;
            if (jj_2_5(2147483647)) {
              result = ProtagReal();
            } else if (jj_2_6(2147483647)) {
              result = ProtagQuotient();
            } else {
              switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
              case NATURAL:
              case PLUS:
              case MINUS:{
                result = ProtagInteger();
                break;
                }
              case REGEX:{
                result = ProtagRegex();
                break;
                }
              case LITERAL:{
                result = ProtagLiteral();
                break;
                }
              case PNAME:{
                result = ProtagName();
                break;
                }
              default:
                jj_la1[5] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
            }
          }
        }
      }
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

// *** Java Paths and Scopes ***
  final public     IJavaPath JavaPath() throws ParseException {LinkedList<IJavaPathSegment> segments = new LinkedList<>();
        List<IJavaPathSegment> result;
    jj_consume_token(JPATH_START);
    spacing();
    result = jScope(segments);
{if ("" != null) return new JavaPath(segments);}
    throw new Error("Missing return statement in function");
}

  final private List<IJavaPathSegment> jScope(LinkedList<IJavaPathSegment> segments) throws ParseException {IJavaPathSegment item;
    item = JavaPathSegment();
    if (jj_2_7(2147483647)) {
      spacing();
      jj_consume_token(DOT);
      spacing();
      jScope(segments);
    } else {
      ;
    }
segments.addFirst(item);
            {if ("" != null) return segments;}
    throw new Error("Missing return statement in function");
}

  final public IJavaPathSegment JavaPathSegment() throws ParseException {LinkedList<ProtagNode> pathSegments = new LinkedList<>();
        ProtagNode singleSegment;
    if (jj_2_8(2)) {
      jSegmentMulti(pathSegments);
{if ("" != null) return new JavaPathSegment(pathSegments);}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case JNAME:
      case MAP_START:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        singleSegment = jSegmentSingle();
pathSegments.addFirst(singleSegment);
            {if ("" != null) return new JavaPathSegment(pathSegments);}
        break;
        }
      default:
        jj_la1[6] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode jSegmentSingle() throws ParseException {Token jName;
        ProtagNode segment;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case JNAME:{
      jName = jj_consume_token(JNAME);
ProtagStringToken pst = (ProtagStringToken) jName;
            {if ("" != null) return new LJavaName(String.valueOf(pst.getValue()));}
      break;
      }
    case MAP_START:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      segment = containedSegment();
{if ("" != null) return segment;}
      break;
      }
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> jSegmentMulti(LinkedList<ProtagNode> pathSegments) throws ParseException {Token jName;
        ProtagNode segmentItem;
    if (jj_2_9(2)) {
      jName = jj_consume_token(JNAME);
      jSegmentExclJBody(pathSegments);
ProtagStringToken pst = (ProtagStringToken) jName;
            pathSegments.addFirst(new LJavaName(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
    } else if (jj_2_10(2)) {
      segmentItem = containedSegment();
      jSegmentInclJBody(pathSegments);
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> jSegmentInclJBody(LinkedList<ProtagNode> pathSegments) throws ParseException {Token jBody;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case JBODY:{
      jBody = jj_consume_token(JBODY);
      if (jj_2_11(2147483647)) {
        jSegmentExclJBody(pathSegments);
      } else {
        ;
      }
ProtagStringToken pst = (ProtagStringToken) jBody;
            pathSegments.addFirst(new LJavaBody(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
      break;
      }
    default:
      jj_la1[8] = jj_gen;
      if (jj_2_12(2147483647)) {
        jSegmentExclJBody(pathSegments);
{if ("" != null) return pathSegments;}
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> jSegmentExclJBody(LinkedList<ProtagNode> pathSegments) throws ParseException {ProtagNode segmentItem;
    segmentItem = containedSegment();
    if (jj_2_13(2147483647)) {
      jSegmentInclJBody(pathSegments);
    } else {
      ;
    }
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    throw new Error("Missing return statement in function");
}

// *** File Paths and Scopes ***
    //    fPath ::= (FPATH_START spacing fScope)
  final public     IFilePath FilePath() throws ParseException {LinkedList<IFilePathSegment> segments = new LinkedList<>();
        List<IFilePathSegment> result;
    jj_consume_token(FPATH_START);
    spacing();
    result = fScope(segments);
{if ("" != null) return new FilePath(segments);}
    throw new Error("Missing return statement in function");
}

  final private List<IFilePathSegment> fScope(LinkedList<IFilePathSegment> segments) throws ParseException {IFilePathSegment item;
    item = FilePathSegment();
    if (jj_2_14(2147483647)) {
      spacing();
      jj_consume_token(SLASH);
      spacing();
      fScope(segments);
    } else {
      ;
    }
segments.addFirst(item);
            {if ("" != null) return segments;}
    throw new Error("Missing return statement in function");
}

//    private fScopeSegment ::= fSegmentMulti | fSegmentSingle
  final public     IFilePathSegment FilePathSegment() throws ParseException {LinkedList<ProtagNode> pathSegments = new LinkedList<>();
        ProtagNode singleSegment;
    if (jj_2_15(2)) {
      fSegmentMulti(pathSegments);
{if ("" != null) return new FilePathSegment(pathSegments);}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case FNAME:
      case MAP_START:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        singleSegment = fSegmentSingle();
pathSegments.addFirst(singleSegment);
            {if ("" != null) return new FilePathSegment(pathSegments);}
        break;
        }
      default:
        jj_la1[9] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode fSegmentSingle() throws ParseException {Token fName;
        ProtagNode segment;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FNAME:{
      fName = jj_consume_token(FNAME);
ProtagStringToken pst = (ProtagStringToken) fName;
            {if ("" != null) return new LFileName(String.valueOf(pst.getValue()));}
      break;
      }
    case MAP_START:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      segment = containedSegment();
{if ("" != null) return segment;}
      break;
      }
    default:
      jj_la1[10] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> fSegmentMulti(LinkedList<ProtagNode> pathSegments) throws ParseException {Token fName;
        ProtagNode segmentItem;
    if (jj_2_16(2)) {
      fName = jj_consume_token(FNAME);
      fSegmentExclFName(pathSegments);
ProtagStringToken pst = (ProtagStringToken) fName;
            pathSegments.addFirst(new LFileName(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
    } else if (jj_2_17(2)) {
      segmentItem = containedSegment();
      fSegmentInclFName(pathSegments);
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> fSegmentInclFName(LinkedList<ProtagNode> pathSegments) throws ParseException {Token fBody;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FNAME:{
      fBody = jj_consume_token(FNAME);
      if (jj_2_18(2147483647)) {
        fSegmentExclFName(pathSegments);
      } else {
        ;
      }
ProtagStringToken pst = (ProtagStringToken) fBody;
            pathSegments.addFirst(new LFileName(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
      break;
      }
    default:
      jj_la1[11] = jj_gen;
      if (jj_2_19(2147483647)) {
        fSegmentExclFName(pathSegments);
{if ("" != null) return pathSegments;}
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> fSegmentExclFName(LinkedList<ProtagNode> pathSegments) throws ParseException {ProtagNode segmentItem;
    segmentItem = containedSegment();
    if (jj_2_20(2147483647)) {
      fSegmentInclFName(pathSegments);
    } else {
      ;
    }
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    throw new Error("Missing return statement in function");
}

  final public IProtagPath ProtagPath() throws ParseException {LinkedList<IProtagPathSegment> segments = new LinkedList<>();
        IProtagPathSegment firstPart;
        IProtagPathSegment secondPart;
        Token firstPartNat;
    if (jj_2_22(2147483647)) {
      firstPartNat = jj_consume_token(NATURAL);
      spacing();
      jj_consume_token(DOT);
      spacing();
      secondPart = protagSegmentExclNat();
      if (jj_2_21(2147483647)) {
        spacing();
        jj_consume_token(DOT);
        spacing();
        protagPathRest(segments);
      } else {
        ;
      }
// first add the second part
            segments.addFirst(secondPart);

            // then add the first part, which is a segment that just consists of the natural
            ProtagNaturalToken pnt = (ProtagNaturalToken) firstPartNat;
            LProtagNatural firstNode = new LProtagNatural(pnt.getValue());
            LinkedList<ProtagNode> nodeList = new LinkedList<>();
            nodeList.addFirst(firstNode);
            segments.addFirst(new ProtagPathSegment(nodeList));
            {if ("" != null) return new ProtagPath(segments);}
    } else if (jj_2_23(2147483647)) {
      firstPart = protagSegmentExclNat();
      spacing();
      jj_consume_token(DOT);
      spacing();
      protagPathRest(segments);
segments.addFirst(firstPart);
            {if ("" != null) return new ProtagPath(segments);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private IProtagPathSegment protagSegmentExclNat() throws ParseException {IProtagPathSegment segment;
        ProtagNode contained;
        Token ident;
    if (jj_2_24(2147483647)) {
      segment = ProtagPathSegment();
{if ("" != null) return segment;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case MAP_START:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        contained = containedSegment();
LinkedList<ProtagNode> segmentItems = new LinkedList<>();
            segmentItems.add(contained);
            {if ("" != null) return new ProtagPathSegment(segmentItems);}
        break;
        }
      case PNAME:{
        ident = jj_consume_token(PNAME);
ProtagStringToken pst = (ProtagStringToken) ident;

            LinkedList<ProtagNode> segmentItems = new LinkedList<>();
            segmentItems.add(new LProtagName(String.valueOf(ident.getValue())));
            {if ("" != null) return new ProtagPathSegment(segmentItems);}
        break;
        }
      default:
        jj_la1[12] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private List<IProtagPathSegment> protagPathRest(LinkedList<IProtagPathSegment> segments) throws ParseException {IProtagPathSegment segment;
        ProtagNode singleNodeSegment;
        Token singleTokenSegment;
    if (jj_2_25(2147483647)) {
      segment = ProtagPathSegment();
segments.add(segment);
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case MAP_START:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        singleNodeSegment = containedSegment();
LinkedList<ProtagNode> segmentItems = new LinkedList<>();
                segmentItems.add(singleNodeSegment);
                segments.add(new ProtagPathSegment(segmentItems));
        break;
        }
      case PNAME:{
        singleTokenSegment = jj_consume_token(PNAME);
ProtagStringToken pst = (ProtagStringToken) singleTokenSegment;
                LinkedList<ProtagNode> segmentItems = new LinkedList<>();
                segmentItems.add(new LProtagName(String.valueOf(pst.getValue())));
                segments.add(new ProtagPathSegment(segmentItems));
        break;
        }
      case NATURAL:{
        singleTokenSegment = jj_consume_token(NATURAL);
ProtagNaturalToken pnt = (ProtagNaturalToken) singleTokenSegment;
                LinkedList<ProtagNode> segmentItems = new LinkedList<>();
                segmentItems.add(new LProtagNatural(pnt.getValue()));

                segments.add(new ProtagPathSegment(segmentItems));
        break;
        }
      default:
        jj_la1[13] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    if (jj_2_26(2147483647)) {
      spacing();
      jj_consume_token(DOT);
      spacing();
      protagPathRest(segments);
    } else {
      ;
    }
{if ("" != null) return segments;}
    throw new Error("Missing return statement in function");
}

//    ySegmentMulti ::= (containedSegment ySegmentInclVals)
    //        | ((YNAME|NATURAL) ySegmentExclVals) {methods=[isElementType]}
  final public     IProtagPathSegment ProtagPathSegment() throws ParseException {LinkedList<ProtagNode> segmentItems = new LinkedList<>();
        ProtagNode firstNodeSegmentItem;
        Token firstTokenSegmentItem;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case MAP_START:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      firstNodeSegmentItem = containedSegment();
      protagSegmentInclVals(segmentItems);
segmentItems.addFirst(firstNodeSegmentItem);
      break;
      }
    case NATURAL:
    case PNAME:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case PNAME:{
        firstTokenSegmentItem = jj_consume_token(PNAME);
ProtagStringToken pst = (ProtagStringToken) firstTokenSegmentItem;
                    segmentItems.add(new LProtagName(String.valueOf(pst.getValue())));
        break;
        }
      case NATURAL:{
        firstTokenSegmentItem = jj_consume_token(NATURAL);
ProtagNaturalToken pnt = (ProtagNaturalToken) firstTokenSegmentItem;
                    segmentItems.add(new LProtagNatural(pnt.getValue()));
        break;
        }
      default:
        jj_la1[14] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      protagSegmentExclVals(segmentItems);
      break;
      }
    default:
      jj_la1[15] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return new ProtagPathSegment(segmentItems);}
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> protagSegmentExclVals(LinkedList<ProtagNode> segmentItems) throws ParseException {ProtagNode segmentItem;
    segmentItem = containedSegment();
segmentItems.add(segmentItem);
    if (jj_2_27(2147483647)) {
      protagSegmentInclVals(segmentItems);
    } else {
      ;
    }
{if ("" != null) return segmentItems;}
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> protagSegmentInclVals(LinkedList<ProtagNode> segmentItems) throws ParseException {Token firstTokenSegmentItem;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case NATURAL:
    case PBODY:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case NATURAL:{
        firstTokenSegmentItem = jj_consume_token(NATURAL);
ProtagNaturalToken pnt = (ProtagNaturalToken) firstTokenSegmentItem;
                    segmentItems.add(new LProtagNatural(pnt.getValue()));
        break;
        }
      case PBODY:{
        firstTokenSegmentItem = jj_consume_token(PBODY);
ProtagStringToken pst = (ProtagStringToken) firstTokenSegmentItem;
                    segmentItems.add(new LProtagBody(String.valueOf(pst.getValue())));
        break;
        }
      default:
        jj_la1[16] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_28(2147483647)) {
        protagSegmentExclVals(segmentItems);
      } else {
        ;
      }
      break;
      }
    case MAP_START:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      protagSegmentExclVals(segmentItems);
      break;
      }
    default:
      jj_la1[17] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return segmentItems;}
    throw new Error("Missing return statement in function");
}

//QUOTIENT ::= (INTEGER spacing AND spacing)? INTEGER spacing SLASH spacing NATURAL // 1 & 3/4, -1 &3/4, +1 & -3/4, 1/2
  final public LProtagQuotient ProtagQuotient() throws ParseException {XInteger intPart;
    XInteger numerator;
    Token denominator;
    if (jj_2_29(2147483647)) {
      intPart = IntegerVal();
      spacing();
      jj_consume_token(AND);
      spacing();
      numerator = IntegerVal();
      spacing();
      jj_consume_token(SLASH);
      spacing();
      denominator = jj_consume_token(NATURAL);
int integerPart = intPart.toInteger();
        // todo if denominator is zero, we should probably throw somewhere and make it more explicit to user
        Fraction fractionalPart = new Fraction(numerator.toInteger(), ((ProtagNaturalToken)denominator).getValue());
        {if ("" != null) return new LProtagQuotient(fractionalPart.add(integerPart));}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case NATURAL:
      case PLUS:
      case MINUS:{
        numerator = IntegerVal();
        spacing();
        jj_consume_token(SLASH);
        spacing();
        denominator = jj_consume_token(NATURAL);
Fraction fractionalPart = new Fraction(numerator.toInteger(), ((ProtagNaturalToken)denominator).getValue());
        {if ("" != null) return new LProtagQuotient(fractionalPart);}
        break;
        }
      default:
        jj_la1[18] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final public XInteger IntegerVal() throws ParseException {ESignType sign = ESignType.NONE;
    Token nat;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:
    case MINUS:{
      sign = Sign();
      spacing();
      break;
      }
    default:
      jj_la1[19] = jj_gen;
      ;
    }
    nat = jj_consume_token(NATURAL);
{if ("" != null) return new XInteger(sign, ((ProtagNaturalToken)nat).getValue());}
    throw new Error("Missing return statement in function");
}

//INTEGER ::= (SIGN spacing)? NATURAL
  final public LProtagInteger ProtagInteger() throws ParseException {ESignType sign = ESignType.NONE;
    Token nat;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:
    case MINUS:{
      sign = Sign();
      spacing();
      break;
      }
    default:
      jj_la1[20] = jj_gen;
      ;
    }
    nat = jj_consume_token(NATURAL);
{if ("" != null) return new LProtagInteger(sign.negate(((ProtagNaturalToken)nat).getValue()));}
    throw new Error("Missing return statement in function");
}

//REAL ::= (SIGN spacing)? DECIMAL
  final public LProtagReal ProtagReal() throws ParseException {ESignType sign = ESignType.NONE;
    XDecimal decimal;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:
    case MINUS:{
      sign = Sign();
      spacing();
      break;
      }
    default:
      jj_la1[21] = jj_gen;
      ;
    }
    decimal = Decimal();
{if ("" != null) return new LProtagReal(decimal.toDouble(sign));}
    throw new Error("Missing return statement in function");
}

//private DECIMAL ::= NATURAL DOT NATURAL // define DECIMAL in parser rather than lexer, as this might be part of a ysegment rather than a decimal
  final public XDecimal Decimal() throws ParseException {Token integerPart;
    Token fractionalPart;
    integerPart = jj_consume_token(NATURAL);
    jj_consume_token(DOT);
    fractionalPart = jj_consume_token(NATURAL);
{if ("" != null) return new XDecimal(((ProtagNaturalToken)integerPart).getValue(), ((ProtagNaturalToken)fractionalPart).getValue());}
    throw new Error("Missing return statement in function");
}

//private SIGN ::= (PLUS|MINUS)
  final public ESignType Sign() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:{
      jj_consume_token(PLUS);
{if ("" != null) return ESignType.PLUS;}
      break;
      }
    case MINUS:{
      jj_consume_token(MINUS);
{if ("" != null) return ESignType.MINUS;}
      break;
      }
    default:
      jj_la1[22] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

//Properties ::= BaseData spacing PROPERTY_SEP (yapping_)? {
  final public IProtagProperties ProtagProperties(IProtagProperties context) throws ParseException {//    IProtagProperties result = context == null ? new ProtagProperties() : context;
    ProtagNode name;
    IProtagSequence body = new ProtagSequence();
    name = baseData();
    spacing();
    jj_consume_token(PROPERTY_SEP);
    if (jj_2_30(2147483647)) {
      body = ProtagSequence(body, context);
    } else {
      ;
    }
ProtagSection section = new ProtagSection(name, body);
        context.getItems().addFirst(section);
        {if ("" != null) return context;}
    throw new Error("Missing return statement in function");
}

//Map ::= (MAP_START spacing MAP_END) // {}
//    // { a = b[, c = d]* }
//    | (MAP_START spacing PairBounded (spacing LIST_SEP spacing PairBounded)* spacing MAP_END) {
//        methods=[isElementType]
//    }
  final public IProtagMap ProtagMap() throws ParseException {LinkedList<IProtagPair> entries = new LinkedList<>();
    IProtagPair entry;
    if (jj_2_32(2147483647)) {
      jj_consume_token(MAP_START);
      spacing();
      jj_consume_token(MAP_END);
{if ("" != null) return new ProtagMap(entries);}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case MAP_START:{
        jj_consume_token(MAP_START);
        spacing();
        entry = pairBounded();
entries.add(entry);
        label_1:
        while (true) {
          if (jj_2_31(2147483647)) {
            ;
          } else {
            break label_1;
          }
          spacing();
          jj_consume_token(LIST_SEP);
          spacing();
          entry = pairBounded();
entries.add(entry);
        }
        spacing();
        jj_consume_token(MAP_END);
{if ("" != null) return new ProtagMap(entries);}
        break;
        }
      default:
        jj_la1[23] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

//List ::= (LIST_START LIST_END) // []
//    // [a[, b]*]
//    | LIST_START spacing BoundedData (spacing LIST_SEP spacing BoundedData)* spacing LIST_END {
//        methods=[isElement]
//    }
  final public IProtagList ProtagList() throws ParseException {LinkedList<ProtagNode> list = new LinkedList<>();
    IProtagList result = new ProtagList(list);
    ProtagNode item;
    if (jj_2_34(2147483647)) {
      jj_consume_token(LIST_START);
      spacing();
      jj_consume_token(LIST_END);
{if ("" != null) return result;}
    } else if (jj_2_35(2147483647)) {
      jj_consume_token(LIST_START);
      spacing();
      item = boundedData();
list.add(item);
      label_2:
      while (true) {
        if (jj_2_33(2147483647)) {
          ;
        } else {
          break label_2;
        }
        spacing();
        jj_consume_token(LIST_SEP);
        spacing();
        item = boundedData();
list.add(item);
      }
      spacing();
      jj_consume_token(LIST_END);
{if ("" != null) return result;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

//Precedence ::= PRECEDENCE_START spacing BoundedData spacing PRECEDENCE_END
  final public IProtagPrecedence ProtagPrecedence() throws ParseException {ProtagNode data;
    jj_consume_token(PRECEDENCE_START);
    spacing();
    data = boundedData();
    spacing();
    jj_consume_token(PRECEDENCE_END);
{if ("" != null) return new ProtagPrecedence(data);}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode unboundedData() throws ParseException {ProtagNode result;
    if (jj_2_36(2147483647)) {
      result = ProtagPair();
    } else if (jj_2_37(2147483647)) {
      result = ProtagTransitionRight();
    } else if (jj_2_38(2147483647)) {
      result = ProtagTransitionLeft();
    } else if (jj_2_39(2147483647)) {
      result = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

//PairExpr ::= (TransitionRightExpr|TransitionLeftExpr|BaseData) spacing PAIR_SEP spacing UnboundedData
  final public IProtagPair ProtagPair() throws ParseException {ProtagNode lhs;
    ProtagNode rhs;
    if (jj_2_40(2147483647)) {
      lhs = ProtagTransitionLeft();
    } else if (jj_2_41(2147483647)) {
      lhs = ProtagTransitionRight();
    } else if (jj_2_42(2147483647)) {
      lhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    spacing();
    jj_consume_token(PAIR_SEP);
    spacing();
    rhs = unboundedData();
{if ("" != null) return new ProtagPair(lhs, rhs);}
    throw new Error("Missing return statement in function");
}

//TransitionRightExpr ::= (TransitionLeftExpr|BaseData) spacing TRANSITION_SEP_R spacing (TransitionRightExpr|TransitionLeftExpr|BaseData)
  final public IProtagTransitionRight ProtagTransitionRight() throws ParseException {ProtagNode lhs;
    ProtagNode rhs;
    if (jj_2_43(2147483647)) {
      lhs = ProtagTransitionLeft();
    } else if (jj_2_44(2147483647)) {
      lhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    spacing();
    jj_consume_token(TRANSITION_SEP_R);
    spacing();
    if (jj_2_45(2147483647)) {
      rhs = ProtagTransitionRight();
    } else if (jj_2_46(2147483647)) {
      rhs = ProtagTransitionLeft();
    } else if (jj_2_47(2147483647)) {
      rhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return new ProtagTransitionRight(lhs, rhs);}
    throw new Error("Missing return statement in function");
}

//TransitionLeftExpr ::= BaseData spacing TRANSITION_SEP_L spacing (TransitionLeftExpr|BaseData)
  final public IProtagTransitionLeft ProtagTransitionLeft() throws ParseException {ProtagNode lhs;
    ProtagNode rhs;
    //    LOOKAHEAD(baseData() spacing() <TRANSITION_SEP_L>)
        lhs = baseData();
    spacing();
    jj_consume_token(TRANSITION_SEP_L);
    spacing();
    if (jj_2_48(2147483647)) {
      rhs = ProtagTransitionLeft();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case NATURAL:
      case PNAME:
      case JPATH_START:
      case FPATH_START:
      case PLUS:
      case MINUS:
      case MAP_START:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        //LOOKAHEAD(baseData())
                rhs = baseData();
        break;
        }
      default:
        jj_la1[24] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
{if ("" != null) return new ProtagTransitionLeft(lhs, rhs);}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode boundedData() throws ParseException {ProtagNode result;
    if (jj_2_49(2147483647)) {
      result = pairBounded();
    } else if (jj_2_50(2147483647)) {
      result = ProtagTransitionRightBounded();
    } else if (jj_2_51(2147483647)) {
      result = ProtagTransitionLeftBounded();
    } else if (jj_2_52(2147483647)) {
      result = ProtagProperties(new ProtagProperties());
    } else if (jj_2_53(2147483647)) {
      result = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

  final private IProtagPair pairBounded() throws ParseException {ProtagNode lhs;
    ProtagNode rhs;
    if (jj_2_54(2147483647)) {
      lhs = ProtagTransitionRight();
    } else if (jj_2_55(2147483647)) {
      lhs = ProtagTransitionLeft();
    } else if (jj_2_56(2147483647)) {
      lhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    spacing();
    jj_consume_token(PAIR_SEP);
    spacing();
    rhs = boundedData();
{if ("" != null) return new ProtagPair(lhs, rhs);}
    throw new Error("Missing return statement in function");
}

  final private IProtagTransitionRight ProtagTransitionRightBounded() throws ParseException {ProtagNode lhs;
    ProtagNode rhs;
    if (jj_2_57(2147483647)) {
      lhs = ProtagTransitionLeft();
    } else if (jj_2_58(2147483647)) {
      lhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    spacing();
    jj_consume_token(TRANSITION_SEP_R);
    spacing();
    if (jj_2_59(2147483647)) {
      rhs = ProtagTransitionRightBounded();
    } else if (jj_2_60(2147483647)) {
      rhs = ProtagTransitionLeftBounded();
    } else if (jj_2_61(2147483647)) {
      rhs = ProtagProperties(new ProtagProperties());
    } else if (jj_2_62(2147483647)) {
      rhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return new ProtagTransitionRight(lhs, rhs);}
    throw new Error("Missing return statement in function");
}

  final private IProtagTransitionLeft ProtagTransitionLeftBounded() throws ParseException {ProtagNode lhs;
    ProtagNode rhs;
    lhs = baseData();
    spacing();
    jj_consume_token(TRANSITION_SEP_L);
    spacing();
    if (jj_2_63(2147483647)) {
      rhs = ProtagTransitionLeftBounded();
    } else if (jj_2_64(2147483647)) {
      rhs = ProtagProperties(new ProtagProperties());
    } else if (jj_2_65(2147483647)) {
      rhs = baseData();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return new ProtagTransitionLeft(lhs, rhs);}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode containedSegment() throws ParseException {ProtagNode result;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case REGEX:{
      result = ProtagRegex();
      break;
      }
    case LITERAL:{
      result = ProtagLiteral();
      break;
      }
    case LIST_START:{
      result = ProtagList();
      break;
      }
    case MAP_START:{
      result = ProtagMap();
      break;
      }
    case PRECEDENCE_START:{
      result = ProtagPrecedence();
      break;
      }
    default:
      jj_la1[25] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

//| ProtagRegex()
//    | ProtagLiteral()
//    | ProtagIdentifier()
  final public IProtagRegex ProtagRegex() throws ParseException {Token tok;
    tok = jj_consume_token(REGEX);
ProtagStringToken pst = (ProtagStringToken) tok;
        {if ("" != null) return new LProtagRegexRaw(String.valueOf(pst.getValue()));}
    throw new Error("Missing return statement in function");
}

  final public LProtagLiteral ProtagLiteral() throws ParseException {Token tok;
    tok = jj_consume_token(LITERAL);
ProtagStringToken lit = (ProtagStringToken) tok;
        {if ("" != null) return new LProtagLiteral(String.valueOf(lit.getValue()));}
    throw new Error("Missing return statement in function");
}

  final public LProtagName ProtagName() throws ParseException {Token tok;
    tok = jj_consume_token(PNAME);
ProtagStringToken lit = (ProtagStringToken) tok;
        {if ("" != null) return new LProtagName(String.valueOf(lit.getValue()));}
    throw new Error("Missing return statement in function");
}

  final private List<LProtagLineComment> spacing() throws ParseException {List<LProtagLineComment> result = new ArrayList<>();
    LProtagLineComment comment;
    label_3:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case WHITESPACE:
      case COMMENT:{
        ;
        break;
        }
      default:
        jj_la1[26] = jj_gen;
        break label_3;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case WHITESPACE:{
        jj_consume_token(WHITESPACE);
        break;
        }
      case COMMENT:{
        comment = ProtagLineComment();
result.add(comment);
        break;
        }
      default:
        jj_la1[27] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

  final private LProtagLineComment ProtagLineComment() throws ParseException {Token comment;
    comment = jj_consume_token(COMMENT);
{if ("" != null) return new LProtagLineComment(((ProtagStringToken)comment).getValue());}
    throw new Error("Missing return statement in function");
}

  private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_1()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_2()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_3()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_4()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_5()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_6()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_7()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_8()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_9()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_10()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_11()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_12()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_13()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_14()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_15()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_16()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_17()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_18()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_19()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_20()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_21()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_22()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_23()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_24()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_25()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_26()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_27()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_28()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_29()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_30()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_2_31(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_31()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private boolean jj_2_32(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_32()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private boolean jj_2_33(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_33()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private boolean jj_2_34(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_34()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private boolean jj_2_35(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_35()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private boolean jj_2_36(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_36()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private boolean jj_2_37(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_37()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private boolean jj_2_38(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_38()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private boolean jj_2_39(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_39()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private boolean jj_2_40(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_40()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private boolean jj_2_41(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_41()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private boolean jj_2_42(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_42()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private boolean jj_2_43(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_43()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private boolean jj_2_44(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_44()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private boolean jj_2_45(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_45()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  private boolean jj_2_46(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_46()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  private boolean jj_2_47(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_47()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  private boolean jj_2_48(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_48()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  private boolean jj_2_49(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_49()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  private boolean jj_2_50(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_50()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  private boolean jj_2_51(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_51()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  private boolean jj_2_52(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_52()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  private boolean jj_2_53(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_53()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  private boolean jj_2_54(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_54()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  private boolean jj_2_55(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_55()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  private boolean jj_2_56(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_56()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  private boolean jj_2_57(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_57()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  private boolean jj_2_58(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_58()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  private boolean jj_2_59(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_59()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  private boolean jj_2_60(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_60()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  private boolean jj_2_61(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_61()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  private boolean jj_2_62(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_62()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  private boolean jj_2_63(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_63()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  private boolean jj_2_64(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_64()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  private boolean jj_2_65(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_65()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  private boolean jj_3R_null_744_20_39()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_20()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(12)) {
    jj_scanpos = xsp;
    if (jj_3R_null_330_59_22()) return true;
    }
    return false;
  }

  private boolean jj_3_45()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_744_20_39()) {
    jj_scanpos = xsp;
    if (jj_3R_null_744_45_40()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    return false;
  }

  private boolean jj_3R_null_718_45_38()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPath_366_11_122()
 {
    if (jj_3R_protagSegmentExclNat_381_9_23()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_protagPathRest_409_9_154()) return true;
    return false;
  }

  private boolean jj_3_21()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRight_750_9_116()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3_44()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRight_747_9_115()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_43()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_fSegmentExclFName_330_41_193()
 {
    if (jj_3R_fSegmentInclFName_313_9_21()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRight_744_9_114()
 {
    if (jj_3R_ProtagTransitionRight_736_5_87()) return true;
    return false;
  }

  private boolean jj_3_22()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_protagSegmentExclNat_381_9_23()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPath_353_14_153()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_protagPathRest_409_9_154()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRight_739_9_113()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRight_737_9_112()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_null_698_45_36()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPath_350_9_121()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_protagSegmentExclNat_381_9_23()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPath_353_14_153()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_ProtagPath_350_9_92()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPath_350_9_121()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPath_366_11_122()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_696_46_33()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRight_736_5_87()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagTransitionRight_737_9_112()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRight_739_9_113()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    xsp = jj_scanpos;
    if (jj_3R_ProtagTransitionRight_744_9_114()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRight_747_9_115()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRight_750_9_116()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_42()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_null_718_20_37()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_41()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_718_20_37()) {
    jj_scanpos = xsp;
    if (jj_3R_null_718_45_38()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    return false;
  }

  private boolean jj_3_40()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3_18()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPair_720_9_181()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPair_718_9_180()
 {
    if (jj_3R_ProtagTransitionRight_736_5_87()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPair_716_9_179()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_19()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentExclFName_330_9_20()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentExclFName_330_41_193()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_39()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_313_24_195()
 {
    if (jj_3R_fSegmentExclFName_330_9_20()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPair_715_5_166()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPair_716_9_179()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPair_718_9_180()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPair_720_9_181()) return true;
    }
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PAIR_SEP)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_unboundedData_695_5_119()) return true;
    return false;
  }

  private boolean jj_3_38()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_null_698_20_35()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_37()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_698_20_35()) {
    jj_scanpos = xsp;
    if (jj_3R_null_698_45_36()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    return false;
  }

  private boolean jj_3R_null_696_20_32()
 {
    if (jj_3R_ProtagTransitionRight_736_5_87()) return true;
    return false;
  }

  private boolean jj_3_36()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_696_20_32()) {
    jj_scanpos = xsp;
    if (jj_3R_null_696_46_33()) {
    jj_scanpos = xsp;
    if (jj_3R_null_696_71_34()) return true;
    }
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PAIR_SEP)) return true;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_319_11_76()
 {
    if (jj_3R_fSegmentExclFName_330_9_20()) return true;
    return false;
  }

  private boolean jj_3R_unboundedData_702_9_152()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_unboundedData_700_9_151()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_unboundedData_698_9_150()
 {
    if (jj_3R_ProtagTransitionRight_736_5_87()) return true;
    return false;
  }

  private boolean jj_3R_unboundedData_696_9_149()
 {
    if (jj_3R_ProtagPair_715_5_166()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_313_9_21()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentInclFName_313_9_75()) {
    jj_scanpos = xsp;
    if (jj_3R_fSegmentInclFName_319_11_76()) return true;
    }
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_313_9_75()
 {
    if (jj_scan_token(FNAME)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentInclFName_313_24_195()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_unboundedData_695_5_119()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_unboundedData_696_9_149()) {
    jj_scanpos = xsp;
    if (jj_3R_unboundedData_698_9_150()) {
    jj_scanpos = xsp;
    if (jj_3R_unboundedData_700_9_151()) {
    jj_scanpos = xsp;
    if (jj_3R_unboundedData_702_9_152()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_17()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    if (jj_3R_fSegmentInclFName_313_9_21()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPrecedence_683_5_96()
 {
    if (jj_scan_token(PRECEDENCE_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_boundedData_785_5_31()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PRECEDENCE_END)) return true;
    return false;
  }

  private boolean jj_3_33()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_SEP)) return true;
    return false;
  }

  private boolean jj_3_16()
 {
    if (jj_scan_token(FNAME)) return true;
    if (jj_3R_fSegmentExclFName_330_9_20()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentMulti_294_9_19()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3_17()) return true;
    }
    return false;
  }

  private boolean jj_3R_fSegmentSingle_283_11_191()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagList_664_13_164()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_SEP)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_boundedData_785_5_31()) return true;
    return false;
  }

  private boolean jj_3_14()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(SLASH)) return true;
    return false;
  }

  private boolean jj_3_35()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_boundedData_785_5_31()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentSingle_278_9_190()
 {
    if (jj_scan_token(FNAME)) return true;
    return false;
  }

  private boolean jj_3R_fSegmentSingle_278_9_183()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentSingle_278_9_190()) {
    jj_scanpos = xsp;
    if (jj_3R_fSegmentSingle_283_11_191()) return true;
    }
    return false;
  }

  private boolean jj_3_34()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_END)) return true;
    return false;
  }

  private boolean jj_3R_null_223_59_18()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_fScope_247_33_158()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_fScope_247_9_124()) return true;
    return false;
  }

  private boolean jj_3R_null_597_66_30()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    return false;
  }

  private boolean jj_3R_ProtagList_657_5_130()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_boundedData_785_5_31()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ProtagList_664_13_164()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_END)) return true;
    return false;
  }

  private boolean jj_3R_FilePathSegment_265_11_173()
 {
    if (jj_3R_fSegmentSingle_278_9_183()) return true;
    return false;
  }

  private boolean jj_3R_ProtagList_652_5_129()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_END)) return true;
    return false;
  }

  private boolean jj_3R_ProtagList_652_5_98()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagList_652_5_129()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagList_657_5_130()) return true;
    }
    return false;
  }

  private boolean jj_3_13()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(10)) {
    jj_scanpos = xsp;
    if (jj_3R_null_223_59_18()) return true;
    }
    return false;
  }

  private boolean jj_3_30()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_597_57_29()) {
    jj_scanpos = xsp;
    if (jj_3R_null_597_66_30()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_597_57_29()
 {
    if (jj_3R_item_80_5_50()) return true;
    return false;
  }

  private boolean jj_3R_FilePathSegment_260_9_157()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3R_FilePathSegment_265_11_173()) return true;
    }
    return false;
  }

  private boolean jj_3_15()
 {
    if (jj_3R_fSegmentMulti_294_9_19()) return true;
    return false;
  }

  private boolean jj_3_31()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_SEP)) return true;
    return false;
  }

  private boolean jj_3R_jSegmentExclJBody_223_41_192()
 {
    if (jj_3R_jSegmentInclJBody_207_9_17()) return true;
    return false;
  }

  private boolean jj_3R_ProtagProperties_597_47_148()
 {
    if (jj_3R_ProtagSequence_55_5_165()) return true;
    return false;
  }

  private boolean jj_3R_ProtagMap_628_13_163()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(LIST_SEP)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_pairBounded_808_5_108()) return true;
    return false;
  }

  private boolean jj_3R_fScope_247_9_124()
 {
    if (jj_3R_FilePathSegment_260_9_157()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fScope_247_33_158()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_32()
 {
    if (jj_scan_token(MAP_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(MAP_END)) return true;
    return false;
  }

  private boolean jj_3R_FilePath_238_9_94()
 {
    if (jj_scan_token(FPATH_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_fScope_247_9_124()) return true;
    return false;
  }

  private boolean jj_3R_ProtagMap_622_5_128()
 {
    if (jj_scan_token(MAP_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_pairBounded_808_5_108()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ProtagMap_628_13_163()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(MAP_END)) return true;
    return false;
  }

  private boolean jj_3_11()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagMap_616_5_127()
 {
    if (jj_scan_token(MAP_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(MAP_END)) return true;
    return false;
  }

  private boolean jj_3R_ProtagMap_616_5_97()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagMap_616_5_127()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagMap_622_5_128()) return true;
    }
    return false;
  }

  private boolean jj_3_12()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentExclJBody_223_9_15()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentExclJBody_223_41_192()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_207_24_194()
 {
    if (jj_3R_jSegmentExclJBody_223_9_15()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_213_11_74()
 {
    if (jj_3R_jSegmentExclJBody_223_9_15()) return true;
    return false;
  }

  private boolean jj_3R_ProtagProperties_597_5_111()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagProperties_597_47_148()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_207_9_17()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentInclJBody_207_9_73()) {
    jj_scanpos = xsp;
    if (jj_3R_jSegmentInclJBody_213_11_74()) return true;
    }
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_207_9_73()
 {
    if (jj_scan_token(JBODY)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentInclJBody_207_24_194()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_Sign_585_5_107()
 {
    if (jj_scan_token(MINUS)) return true;
    return false;
  }

  private boolean jj_3_10()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    if (jj_3R_jSegmentInclJBody_207_9_17()) return true;
    return false;
  }

  private boolean jj_3R_Sign_583_5_106()
 {
    if (jj_scan_token(PLUS)) return true;
    return false;
  }

  private boolean jj_3R_Sign_583_5_66()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_Sign_583_5_106()) {
    jj_scanpos = xsp;
    if (jj_3R_Sign_585_5_107()) return true;
    }
    return false;
  }

  private boolean jj_3_9()
 {
    if (jj_scan_token(JNAME)) return true;
    if (jj_3R_jSegmentExclJBody_223_9_15()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentMulti_190_9_14()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3_10()) return true;
    }
    return false;
  }

  private boolean jj_3R_Decimal_576_5_132()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_null_111_81_11()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(4)) return true;
    }
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentSingle_179_11_189()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagLineComment_949_5_120()
 {
    if (jj_scan_token(COMMENT)) return true;
    return false;
  }

  private boolean jj_3_7()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_ProtagReal_564_6_131()
 {
    if (jj_3R_Sign_583_5_66()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    return false;
  }

  private boolean jj_3R_ProtagReal_564_5_99()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagReal_564_6_131()) jj_scanpos = xsp;
    if (jj_3R_Decimal_576_5_132()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentSingle_174_9_188()
 {
    if (jj_scan_token(JNAME)) return true;
    return false;
  }

  private boolean jj_3R_jSegmentSingle_174_9_182()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentSingle_174_9_188()) {
    jj_scanpos = xsp;
    if (jj_3R_jSegmentSingle_179_11_189()) return true;
    }
    return false;
  }

  private boolean jj_3R_spacing_936_9_105()
 {
    if (jj_3R_ProtagLineComment_949_5_120()) return true;
    return false;
  }

  private boolean jj_3R_jScope_145_33_156()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_jScope_145_9_123()) return true;
    return false;
  }

  private boolean jj_3R_spacing_935_7_64()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(2)) {
    jj_scanpos = xsp;
    if (jj_3R_spacing_936_9_105()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagInteger_552_6_135()
 {
    if (jj_3R_Sign_583_5_66()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    return false;
  }

  private boolean jj_3R_ProtagInteger_552_5_101()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagInteger_552_6_135()) jj_scanpos = xsp;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_spacing_935_5_7()
 {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_spacing_935_7_64()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_JavaPathSegment_162_11_172()
 {
    if (jj_3R_jSegmentSingle_174_9_182()) return true;
    return false;
  }

  private boolean jj_3R_null_111_60_65()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_null_107_62_9()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_protagSegmentExclNat_381_9_23()) return true;
    return false;
  }

  private boolean jj_3R_JavaPathSegment_157_9_155()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3R_JavaPathSegment_162_11_172()) return true;
    }
    return false;
  }

  private boolean jj_3_8()
 {
    if (jj_3R_jSegmentMulti_190_9_14()) return true;
    return false;
  }

  private boolean jj_3R_IntegerVal_540_6_67()
 {
    if (jj_3R_Sign_583_5_66()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    return false;
  }

  private boolean jj_3R_IntegerVal_540_5_13()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_IntegerVal_540_6_67()) jj_scanpos = xsp;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_ProtagName_920_5_104()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_jScope_145_9_123()
 {
    if (jj_3R_JavaPathSegment_157_9_155()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jScope_145_33_156()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_29()
 {
    if (jj_3R_IntegerVal_540_5_13()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(AND)) return true;
    return false;
  }

  private boolean jj_3R_ProtagQuotient_527_5_134()
 {
    if (jj_3R_IntegerVal_540_5_13()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_ProtagLiteral_909_5_103()
 {
    if (jj_scan_token(LITERAL)) return true;
    return false;
  }

  private boolean jj_3R_JavaPath_137_9_93()
 {
    if (jj_scan_token(JPATH_START)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_jScope_145_9_123()) return true;
    return false;
  }

  private boolean jj_3_28()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagQuotient_518_5_133()
 {
    if (jj_3R_IntegerVal_540_5_13()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(AND)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_IntegerVal_540_5_13()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_ProtagQuotient_518_5_100()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagQuotient_518_5_133()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagQuotient_527_5_134()) return true;
    }
    return false;
  }

  private boolean jj_3_6()
 {
    if (jj_3R_IntegerVal_540_5_13()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(6)) {
    jj_scanpos = xsp;
    if (jj_scan_token(7)) return true;
    }
    return false;
  }

  private boolean jj_3R_null_116_22_12()
 {
    if (jj_3R_Sign_583_5_66()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    return false;
  }

  private boolean jj_3R_ProtagRegex_898_5_102()
 {
    if (jj_scan_token(REGEX)) return true;
    return false;
  }

  private boolean jj_3_5()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_116_22_12()) jj_scanpos = xsp;
    if (jj_scan_token(NATURAL)) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_503_16_186()
 {
    if (jj_3R_protagSegmentExclVals_476_9_162()) return true;
    return false;
  }

  private boolean jj_3R_null_480_38_28()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_504_13_175()
 {
    if (jj_3R_protagSegmentExclVals_476_9_162()) return true;
    return false;
  }

  private boolean jj_3R_baseData_123_11_63()
 {
    if (jj_3R_ProtagName_920_5_104()) return true;
    return false;
  }

  private boolean jj_3R_baseData_122_11_62()
 {
    if (jj_3R_ProtagLiteral_909_5_103()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_498_17_185()
 {
    if (jj_scan_token(PBODY)) return true;
    return false;
  }

  private boolean jj_3_4()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_111_21_10()) {
    jj_scanpos = xsp;
    if (jj_3R_null_111_81_11()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_111_21_10()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_3R_null_111_60_65()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_baseData_121_11_61()
 {
    if (jj_3R_ProtagRegex_898_5_102()) return true;
    return false;
  }

  private boolean jj_3R_baseData_120_11_60()
 {
    if (jj_3R_ProtagInteger_552_5_101()) return true;
    return false;
  }

  private boolean jj_3R_baseData_118_11_59()
 {
    if (jj_3R_ProtagQuotient_518_5_100()) return true;
    return false;
  }

  private boolean jj_3R_null_107_21_8()
 {
    if (jj_3R_protagSegmentExclNat_381_9_23()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3_3()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_107_21_8()) {
    jj_scanpos = xsp;
    if (jj_3R_null_107_62_9()) return true;
    }
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_493_17_184()
 {
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_baseData_116_11_58()
 {
    if (jj_3R_ProtagReal_564_5_99()) return true;
    return false;
  }

  private boolean jj_3R_baseData_115_11_57()
 {
    if (jj_3R_ProtagList_652_5_98()) return true;
    return false;
  }

  private boolean jj_3R_baseData_114_11_56()
 {
    if (jj_3R_ProtagMap_616_5_97()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_884_7_72()
 {
    if (jj_3R_ProtagPrecedence_683_5_96()) return true;
    return false;
  }

  private boolean jj_3R_baseData_113_11_55()
 {
    if (jj_3R_ProtagPrecedence_683_5_96()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_883_7_71()
 {
    if (jj_3R_ProtagMap_616_5_97()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_882_7_70()
 {
    if (jj_3R_ProtagList_652_5_98()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_492_13_174()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentInclVals_493_17_184()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentInclVals_498_17_185()) return true;
    }
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentInclVals_503_16_186()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_baseData_111_11_54()
 {
    if (jj_3R_ProtagPathSegment_448_9_95()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_881_7_69()
 {
    if (jj_3R_ProtagLiteral_909_5_103()) return true;
    return false;
  }

  private boolean jj_3R_baseData_110_11_53()
 {
    if (jj_3R_FilePath_238_9_94()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_880_7_68()
 {
    if (jj_3R_ProtagRegex_898_5_102()) return true;
    return false;
  }

  private boolean jj_3R_baseData_109_11_52()
 {
    if (jj_3R_JavaPath_137_9_93()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_880_5_16()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_containedSegment_880_7_68()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_881_7_69()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_882_7_70()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_883_7_71()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_884_7_72()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_baseData_107_11_51()
 {
    if (jj_3R_ProtagPath_350_9_92()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_491_9_159()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentInclVals_492_13_174()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentInclVals_504_13_175()) return true;
    }
    return false;
  }

  private boolean jj_3_27()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(13)) {
    jj_scanpos = xsp;
    if (jj_3R_null_480_38_28()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_65()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_null_837_45_49()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3_64()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    return false;
  }

  private boolean jj_3_63()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_baseData_106_5_6()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_baseData_107_11_51()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_109_11_52()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_110_11_53()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_111_11_54()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_113_11_55()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_114_11_56()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_115_11_57()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_116_11_58()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_118_11_59()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_120_11_60()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_121_11_61()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_122_11_62()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_123_11_63()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_null_410_83_27()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(4)) return true;
    }
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclVals_480_10_176()
 {
    if (jj_3R_protagSegmentInclVals_491_9_159()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeftBounded_864_9_147()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeftBounded_862_9_146()
 {
    if (jj_3R_ProtagProperties_597_5_111()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeftBounded_860_9_145()
 {
    if (jj_3R_ProtagTransitionLeftBounded_857_5_110()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclVals_476_9_162()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentExclVals_480_10_176()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_null_63_39_5()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeftBounded_857_5_110()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagTransitionLeftBounded_860_9_145()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionLeftBounded_862_9_146()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionLeftBounded_864_9_147()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_item_90_6_91()
 {
    if (jj_scan_token(WHITESPACE)) return true;
    return false;
  }

  private boolean jj_3_62()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_460_17_161()
 {
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3_61()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    return false;
  }

  private boolean jj_3R_null_63_30_4()
 {
    if (jj_3R_item_80_5_50()) return true;
    return false;
  }

  private boolean jj_3_1()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_63_30_4()) {
    jj_scanpos = xsp;
    if (jj_3R_null_63_39_5()) return true;
    }
    return false;
  }

  private boolean jj_3_60()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_null_837_20_48()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_item_84_6_90()
 {
    if (jj_3R_ProtagLineComment_949_5_120()) return true;
    return false;
  }

  private boolean jj_3_59()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_837_20_48()) {
    jj_scanpos = xsp;
    if (jj_3R_null_837_45_49()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    return false;
  }

  private boolean jj_3R_null_811_45_47()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_455_17_160()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_null_410_62_81()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_null_785_69_43()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_843_9_144()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_item_80_5_89()
 {
    if (jj_3R_unboundedData_695_5_119()) return true;
    return false;
  }

  private boolean jj_3R_item_80_5_50()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_item_80_5_89()) {
    jj_scanpos = xsp;
    if (jj_3R_item_84_6_90()) {
    jj_scanpos = xsp;
    if (jj_3R_item_90_6_91()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_58()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_841_9_143()
 {
    if (jj_3R_ProtagProperties_597_5_111()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_454_13_126()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPathSegment_455_17_160()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPathSegment_460_17_161()) return true;
    }
    if (jj_3R_protagSegmentExclVals_476_9_162()) return true;
    return false;
  }

  private boolean jj_3R_ProtagSequence_63_20_187()
 {
    if (jj_3R_ProtagSequence_55_5_165()) return true;
    return false;
  }

  private boolean jj_3_57()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_839_9_142()
 {
    if (jj_3R_ProtagTransitionLeftBounded_857_5_110()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_837_9_141()
 {
    if (jj_3R_ProtagTransitionRightBounded_829_5_109()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_449_13_125()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    if (jj_3R_protagSegmentInclVals_491_9_159()) return true;
    return false;
  }

  private boolean jj_3R_null_381_79_25()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(4)) return true;
    }
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_832_9_140()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3_26()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_448_9_95()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPathSegment_449_13_125()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPathSegment_454_13_126()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_830_9_139()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_ProtagSequence_63_7_178()
 {
    if (jj_3R_item_80_5_50()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagSequence_63_20_187()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_2()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionRightBounded_829_5_109()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagTransitionRightBounded_830_9_139()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRightBounded_832_9_140()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    xsp = jj_scanpos;
    if (jj_3R_ProtagTransitionRightBounded_837_9_141()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRightBounded_839_9_142()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRightBounded_841_9_143()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionRightBounded_843_9_144()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_56()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_436_12_171()
 {
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_protagPathRest_409_9_154()) return true;
    return false;
  }

  private boolean jj_3R_null_811_20_46()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_55()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_811_20_46()) {
    jj_scanpos = xsp;
    if (jj_3R_null_811_45_47()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    return false;
  }

  private boolean jj_3R_null_787_43_45()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_null_785_44_42()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_54()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_ProtagSequence_55_5_177()
 {
    if (jj_3R_ProtagProperties_597_5_111()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_428_15_170()
 {
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_ProtagSequence_55_5_165()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagSequence_55_5_177()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagSequence_63_7_178()) return true;
    }
    return false;
  }

  private boolean jj_3R_pairBounded_813_9_138()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_null_381_58_80()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_pairBounded_811_9_137()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_421_15_169()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_pairBounded_809_9_136()
 {
    if (jj_3R_ProtagTransitionRight_736_5_87()) return true;
    return false;
  }

  private boolean jj_3_25()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_410_23_26()) {
    jj_scanpos = xsp;
    if (jj_3R_null_410_83_27()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_410_23_26()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_3R_null_410_62_81()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_protagPathRest_415_15_168()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_pairBounded_808_5_108()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_pairBounded_809_9_136()) {
    jj_scanpos = xsp;
    if (jj_3R_pairBounded_811_9_137()) {
    jj_scanpos = xsp;
    if (jj_3R_pairBounded_813_9_138()) return true;
    }
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PAIR_SEP)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_3R_boundedData_785_5_31()) return true;
    return false;
  }

  private boolean jj_3_53()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3_52()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PROPERTY_SEP)) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_410_13_167()
 {
    if (jj_3R_ProtagPathSegment_448_9_95()) return true;
    return false;
  }

  private boolean jj_3_51()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_null_787_18_44()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3_50()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_787_18_44()) {
    jj_scanpos = xsp;
    if (jj_3R_null_787_43_45()) return true;
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_R)) return true;
    return false;
  }

  private boolean jj_3R_null_785_18_41()
 {
    if (jj_3R_ProtagTransitionRight_736_5_87()) return true;
    return false;
  }

  private boolean jj_3_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_785_18_41()) {
    jj_scanpos = xsp;
    if (jj_3R_null_785_44_42()) {
    jj_scanpos = xsp;
    if (jj_3R_null_785_69_43()) return true;
    }
    }
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(PAIR_SEP)) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_409_9_154()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagPathRest_410_13_167()) {
    jj_scanpos = xsp;
    if (jj_3R_protagPathRest_415_15_168()) {
    jj_scanpos = xsp;
    if (jj_3R_protagPathRest_421_15_169()) {
    jj_scanpos = xsp;
    if (jj_3R_protagPathRest_428_15_170()) return true;
    }
    }
    }
    xsp = jj_scanpos;
    if (jj_3R_protagPathRest_436_12_171()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_boundedData_793_7_86()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_boundedData_791_7_85()
 {
    if (jj_3R_ProtagProperties_597_5_111()) return true;
    return false;
  }

  private boolean jj_3R_boundedData_789_7_84()
 {
    if (jj_3R_ProtagTransitionLeftBounded_857_5_110()) return true;
    return false;
  }

  private boolean jj_3R_boundedData_787_7_83()
 {
    if (jj_3R_ProtagTransitionRightBounded_829_5_109()) return true;
    return false;
  }

  private boolean jj_3R_boundedData_785_7_82()
 {
    if (jj_3R_pairBounded_808_5_108()) return true;
    return false;
  }

  private boolean jj_3R_boundedData_785_5_31()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_boundedData_785_7_82()) {
    jj_scanpos = xsp;
    if (jj_3R_boundedData_787_7_83()) {
    jj_scanpos = xsp;
    if (jj_3R_boundedData_789_7_84()) {
    jj_scanpos = xsp;
    if (jj_3R_boundedData_791_7_85()) {
    jj_scanpos = xsp;
    if (jj_3R_boundedData_793_7_86()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_null_744_45_40()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3_48()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_392_11_79()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3_24()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_381_19_24()) {
    jj_scanpos = xsp;
    if (jj_3R_null_381_79_25()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_381_19_24()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_3R_null_381_58_80()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeft_771_9_118()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_386_11_78()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeft_768_9_117()
 {
    if (jj_3R_ProtagTransitionLeft_765_5_88()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_381_9_23()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentExclNat_381_9_77()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentExclNat_386_11_78()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentExclNat_392_11_79()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_381_9_77()
 {
    if (jj_3R_ProtagPathSegment_448_9_95()) return true;
    return false;
  }

  private boolean jj_3R_null_330_59_22()
 {
    if (jj_3R_containedSegment_880_5_16()) return true;
    return false;
  }

  private boolean jj_3R_ProtagTransitionLeft_765_5_88()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagTransitionLeft_768_9_117()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagTransitionLeft_771_9_118()) return true;
    }
    return false;
  }

  private boolean jj_3_23()
 {
    if (jj_3R_protagSegmentExclNat_381_9_23()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3_47()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3R_null_696_71_34()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    return false;
  }

  private boolean jj_3_46()
 {
    if (jj_3R_baseData_106_5_6()) return true;
    if (jj_3R_spacing_935_5_7()) return true;
    if (jj_scan_token(TRANSITION_SEP_L)) return true;
    return false;
  }

  /** User defined Token Manager. */
  public TokenManager token_source;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[28];
  static private int[] jj_la1_0;
  static {
	   jj_la1_init_0();
	}
	private static void jj_la1_init_0() {
	   jj_la1_0 = new int[] {0x1c29c934,0x1c29c934,0x1c29c934,0x900,0x290000,0xc00c030,0xc290200,0xc290200,0x400,0xc291000,0xc291000,0x1000,0xc290020,0xc290030,0x30,0xc290030,0x2010,0xc292010,0xc010,0xc000,0xc000,0xc000,0xc000,0x10000,0xc29c930,0xc290000,0x10000004,0x10000004,};
	}
  final private JJCalls[] jj_2_rtns = new JJCalls[65];
  private boolean jj_rescan = false;
  private int jj_gc = 0;


  /** Constructor with user supplied Token Manager. */
  public ProtagParserGen(TokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 28; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(TokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 28; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
	 Token oldToken;
	 if ((oldToken = token).next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 if (token.kind == kind) {
	   jj_gen++;
	   if (++jj_gc > 100) {
		 jj_gc = 0;
		 for (int i = 0; i < jj_2_rtns.length; i++) {
		   JJCalls c = jj_2_rtns[i];
		   while (c != null) {
			 if (c.gen < jj_gen) c.first = null;
			 c = c.next;
		   }
		 }
	   }
	   return token;
	 }
	 token = oldToken;
	 jj_kind = kind;
	 throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error {
    @Override
    public Throwable fillInStackTrace() {
      return this;
    }
  }
  static private final LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
	 if (jj_scanpos == jj_lastpos) {
	   jj_la--;
	   if (jj_scanpos.next == null) {
		 jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
	   } else {
		 jj_lastpos = jj_scanpos = jj_scanpos.next;
	   }
	 } else {
	   jj_scanpos = jj_scanpos.next;
	 }
	 if (jj_rescan) {
	   int i = 0; Token tok = token;
	   while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
	   if (tok != null) jj_add_error_token(kind, i);
	 }
	 if (jj_scanpos.kind != kind) return true;
	 if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
	 return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
	 if (token.next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 jj_gen++;
	 return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
	 Token t = token;
	 for (int i = 0; i < index; i++) {
	   if (t.next != null) t = t.next;
	   else t = t.next = token_source.getNextToken();
	 }
	 return t;
  }

  private int jj_ntk_f() {
	 if ((jj_nt=token.next) == null)
	   return (jj_ntk = (token.next=token_source.getNextToken()).kind);
	 else
	   return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
	 if (pos >= 100) {
		return;
	 }

	 if (pos == jj_endpos + 1) {
	   jj_lasttokens[jj_endpos++] = kind;
	 } else if (jj_endpos != 0) {
	   jj_expentry = new int[jj_endpos];

	   for (int i = 0; i < jj_endpos; i++) {
		 jj_expentry[i] = jj_lasttokens[i];
	   }

	   for (int[] oldentry : jj_expentries) {
		 if (oldentry.length == jj_expentry.length) {
		   boolean isMatched = true;

		   for (int i = 0; i < jj_expentry.length; i++) {
			 if (oldentry[i] != jj_expentry[i]) {
			   isMatched = false;
			   break;
			 }

		   }
		   if (isMatched) {
			 jj_expentries.add(jj_expentry);
			 break;
		   }
		 }
	   }

	   if (pos != 0) {
		 jj_lasttokens[(jj_endpos = pos) - 1] = kind;
	   }
	 }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
	 jj_expentries.clear();
	 boolean[] la1tokens = new boolean[29];
	 if (jj_kind >= 0) {
	   la1tokens[jj_kind] = true;
	   jj_kind = -1;
	 }
	 for (int i = 0; i < 28; i++) {
	   if (jj_la1[i] == jj_gen) {
		 for (int j = 0; j < 32; j++) {
		   if ((jj_la1_0[i] & (1<<j)) != 0) {
			 la1tokens[j] = true;
		   }
		 }
	   }
	 }
	 for (int i = 0; i < 29; i++) {
	   if (la1tokens[i]) {
		 jj_expentry = new int[1];
		 jj_expentry[0] = i;
		 jj_expentries.add(jj_expentry);
	   }
	 }
	 jj_endpos = 0;
	 jj_rescan_token();
	 jj_add_error_token(0, 0);
	 int[][] exptokseq = new int[jj_expentries.size()][];
	 for (int i = 0; i < jj_expentries.size(); i++) {
	   exptokseq[i] = jj_expentries.get(i);
	 }
	 return new ParseException(token, exptokseq, tokenImage);
  }

  private boolean trace_enabled;

/** Trace enabled. */
  final public boolean trace_enabled() {
	 return trace_enabled;
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
	 jj_rescan = true;
	 for (int i = 0; i < 65; i++) {
	   try {
		 JJCalls p = jj_2_rtns[i];

		 do {
		   if (p.gen > jj_gen) {
			 jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
			 switch (i) {
			   case 0: jj_3_1(); break;
			   case 1: jj_3_2(); break;
			   case 2: jj_3_3(); break;
			   case 3: jj_3_4(); break;
			   case 4: jj_3_5(); break;
			   case 5: jj_3_6(); break;
			   case 6: jj_3_7(); break;
			   case 7: jj_3_8(); break;
			   case 8: jj_3_9(); break;
			   case 9: jj_3_10(); break;
			   case 10: jj_3_11(); break;
			   case 11: jj_3_12(); break;
			   case 12: jj_3_13(); break;
			   case 13: jj_3_14(); break;
			   case 14: jj_3_15(); break;
			   case 15: jj_3_16(); break;
			   case 16: jj_3_17(); break;
			   case 17: jj_3_18(); break;
			   case 18: jj_3_19(); break;
			   case 19: jj_3_20(); break;
			   case 20: jj_3_21(); break;
			   case 21: jj_3_22(); break;
			   case 22: jj_3_23(); break;
			   case 23: jj_3_24(); break;
			   case 24: jj_3_25(); break;
			   case 25: jj_3_26(); break;
			   case 26: jj_3_27(); break;
			   case 27: jj_3_28(); break;
			   case 28: jj_3_29(); break;
			   case 29: jj_3_30(); break;
			   case 30: jj_3_31(); break;
			   case 31: jj_3_32(); break;
			   case 32: jj_3_33(); break;
			   case 33: jj_3_34(); break;
			   case 34: jj_3_35(); break;
			   case 35: jj_3_36(); break;
			   case 36: jj_3_37(); break;
			   case 37: jj_3_38(); break;
			   case 38: jj_3_39(); break;
			   case 39: jj_3_40(); break;
			   case 40: jj_3_41(); break;
			   case 41: jj_3_42(); break;
			   case 42: jj_3_43(); break;
			   case 43: jj_3_44(); break;
			   case 44: jj_3_45(); break;
			   case 45: jj_3_46(); break;
			   case 46: jj_3_47(); break;
			   case 47: jj_3_48(); break;
			   case 48: jj_3_49(); break;
			   case 49: jj_3_50(); break;
			   case 50: jj_3_51(); break;
			   case 51: jj_3_52(); break;
			   case 52: jj_3_53(); break;
			   case 53: jj_3_54(); break;
			   case 54: jj_3_55(); break;
			   case 55: jj_3_56(); break;
			   case 56: jj_3_57(); break;
			   case 57: jj_3_58(); break;
			   case 58: jj_3_59(); break;
			   case 59: jj_3_60(); break;
			   case 60: jj_3_61(); break;
			   case 61: jj_3_62(); break;
			   case 62: jj_3_63(); break;
			   case 63: jj_3_64(); break;
			   case 64: jj_3_65(); break;
			 }
		   }
		   p = p.next;
		 } while (p != null);

		 } catch(LookaheadSuccess ls) { }
	 }
	 jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
	 JJCalls p = jj_2_rtns[index];
	 while (p.gen > jj_gen) {
	   if (p.next == null) { p = p.next = new JJCalls(); break; }
	   p = p.next;
	 }

	 p.gen = jj_gen + xla - jj_la; 
	 p.first = token;
	 p.arg = xla;
  }

  static final class JJCalls {
	 int gen;
	 Token first;
	 int arg;
	 JJCalls next;
  }

}
