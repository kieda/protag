/* ProtagParserGen.java */
/* Generated By:JavaCC: Do not edit this line. ProtagParserGen.java */
package io.hostilerobot.protag.lang;

import java.util.*;
import java.io.*;
import io.hostilerobot.protag.lang.ProtagLexer;
import io.hostilerobot.protag.lang.ProtagSymbol;
import io.hostilerobot.protag.lang.ProtagTokenType;
import io.hostilerobot.protag.lang.ast.*;
import io.hostilerobot.protag.lang.ast.impl.*;import org.apache.commons.math.fraction.Fraction;

class ProtagParserGen implements ProtagParserGenConstants {
    public ProtagParserGen(ProtagLexer lexer) {
        this((TokenManager)lexer);
        token = new StartToken();
    }

    public void ReInit(ProtagLexer lexer) {
        this.ReInit((TokenManager) lexer);
        token = new StartToken();
    }

  final public IProtagSequence program() throws ParseException {IProtagSequence result = new ProtagSequence();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case WHITESPACE:
    case NATURAL:
    case PNAME:
    case JPATH_START:
    case FPATH_START:
    case PLUS:
    case MINUS:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:
    case COMMENT:{
      result = ProtagSequence(result, null);
      break;
      }
    default:
      jj_la1[0] = jj_gen;
      ;
    }
    jj_consume_token(0);
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

//private yapping_ ::= Properties|(item yapping_?)
  final public IProtagSequence ProtagSequence(IProtagSequence result, ProtagProperties context) throws ParseException {IProtagProperties properties;
    ProtagNode item;
    /*properties=ProtagProperties(result, context)
        {
    
        }
        | */item = item();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case WHITESPACE:
    case NATURAL:
    case PNAME:
    case JPATH_START:
    case FPATH_START:
    case PLUS:
    case MINUS:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:
    case COMMENT:{
      ProtagSequence(result, context);
      break;
      }
    default:
      jj_la1[1] = jj_gen;
      ;
    }
if(item != null) {
            result.getItems().addFirst(item);
        }
        {if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode item() throws ParseException {ProtagNode item = null;
    LProtagLineComment lineComment;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case NATURAL:
    case PNAME:
    case JPATH_START:
    case FPATH_START:
    case PLUS:
    case MINUS:
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      item = unboundedData();
{if ("" != null) return item;}
      break;
      }
    case COMMENT:{
      lineComment = ProtagLineComment();
// todo - add lineComment to meta table
        {if ("" != null) return null;}
      break;
      }
    case WHITESPACE:{
      jj_consume_token(WHITESPACE);
{if ("" != null) return null;}
      break;
      }
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode baseData() throws ParseException {ProtagNode result;
    if (jj_2_1(2147483647)) {
      result = ProtagPath();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case JPATH_START:{
        result = JavaPath();
        break;
        }
      case FPATH_START:{
        result = FilePath();
        break;
        }
      default:
        jj_la1[3] = jj_gen;
        if (jj_2_2(2147483647)) {
          result = ProtagPathSegment();
        } else {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case PRECEDENCE_START:{
            result = ProtagPrecedence();
            break;
            }
          case LIST_START:{
            result = ProtagList();
            break;
            }
          default:
            jj_la1[4] = jj_gen;
            if (jj_2_3(2147483647)) {
              result = ProtagReal();
            } else if (jj_2_4(2147483647)) {
              result = ProtagQuotient();
            } else {
              switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
              case NATURAL:
              case PLUS:
              case MINUS:{
                result = ProtagInteger();
                break;
                }
              case REGEX:{
                result = ProtagRegex();
                break;
                }
              case LITERAL:{
                result = ProtagLiteral();
                break;
                }
              case PNAME:{
                result = ProtagName();
                break;
                }
              default:
                jj_la1[5] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
              }
            }
          }
        }
      }
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

// *** Java Paths and Scopes ***
  final public     IJavaPath JavaPath() throws ParseException {LinkedList<IJavaPathSegment> segments = new LinkedList<>();
        List<IJavaPathSegment> result;
    jj_consume_token(JPATH_START);
    spacing();
    result = jScope(segments);
{if ("" != null) return new JavaPath(segments);}
    throw new Error("Missing return statement in function");
}

  final private List<IJavaPathSegment> jScope(LinkedList<IJavaPathSegment> segments) throws ParseException {IJavaPathSegment item;
    item = JavaPathSegment();
    if (jj_2_5(2147483647)) {
      spacing();
      jj_consume_token(DOT);
      spacing();
      jScope(segments);
    } else {
      ;
    }
segments.addFirst(item);
            {if ("" != null) return segments;}
    throw new Error("Missing return statement in function");
}

  final public IJavaPathSegment JavaPathSegment() throws ParseException {LinkedList<ProtagNode> pathSegments = new LinkedList<>();
        ProtagNode singleSegment;
    if (jj_2_6(2)) {
      jSegmentMulti(pathSegments);
{if ("" != null) return new JavaPathSegment(pathSegments);}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case JNAME:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        singleSegment = jSegmentSingle();
pathSegments.addFirst(singleSegment);
            {if ("" != null) return new JavaPathSegment(pathSegments);}
        break;
        }
      default:
        jj_la1[6] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode jSegmentSingle() throws ParseException {Token jName;
        ProtagNode segment;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case JNAME:{
      jName = jj_consume_token(JNAME);
ProtagStringToken pst = (ProtagStringToken) jName;
            {if ("" != null) return new LJavaName(String.valueOf(pst.getValue()));}
      break;
      }
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      segment = containedSegment();
{if ("" != null) return segment;}
      break;
      }
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> jSegmentMulti(LinkedList<ProtagNode> pathSegments) throws ParseException {Token jName;
        ProtagNode segmentItem;
    if (jj_2_7(2)) {
      jName = jj_consume_token(JNAME);
      jSegmentExclJBody(pathSegments);
ProtagStringToken pst = (ProtagStringToken) jName;
            pathSegments.addFirst(new LJavaName(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
    } else if (jj_2_8(2)) {
      segmentItem = containedSegment();
      jSegmentInclJBody(pathSegments);
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> jSegmentInclJBody(LinkedList<ProtagNode> pathSegments) throws ParseException {Token jBody;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case JBODY:{
      jBody = jj_consume_token(JBODY);
      if (jj_2_9(2147483647)) {
        jSegmentExclJBody(pathSegments);
      } else {
        ;
      }
ProtagStringToken pst = (ProtagStringToken) jBody;
            pathSegments.addFirst(new LJavaBody(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
      break;
      }
    default:
      jj_la1[8] = jj_gen;
      if (jj_2_10(2147483647)) {
        jSegmentExclJBody(pathSegments);
{if ("" != null) return pathSegments;}
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> jSegmentExclJBody(LinkedList<ProtagNode> pathSegments) throws ParseException {ProtagNode segmentItem;
    segmentItem = containedSegment();
    if (jj_2_11(2147483647)) {
      jSegmentInclJBody(pathSegments);
    } else {
      ;
    }
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    throw new Error("Missing return statement in function");
}

// *** File Paths and Scopes ***
    //    fPath ::= (FPATH_START spacing fScope)
  final public     IFilePath FilePath() throws ParseException {LinkedList<IFilePathSegment> segments = new LinkedList<>();
        List<IFilePathSegment> result;
    jj_consume_token(FPATH_START);
    spacing();
    result = fScope(segments);
{if ("" != null) return new FilePath(segments);}
    throw new Error("Missing return statement in function");
}

  final private List<IFilePathSegment> fScope(LinkedList<IFilePathSegment> segments) throws ParseException {IFilePathSegment item;
    item = FilePathSegment();
    if (jj_2_12(2147483647)) {
      spacing();
      jj_consume_token(SLASH);
      spacing();
      fScope(segments);
    } else {
      ;
    }
segments.addFirst(item);
            {if ("" != null) return segments;}
    throw new Error("Missing return statement in function");
}

//    private fScopeSegment ::= fSegmentMulti | fSegmentSingle
  final public     IFilePathSegment FilePathSegment() throws ParseException {LinkedList<ProtagNode> pathSegments = new LinkedList<>();
        ProtagNode singleSegment;
    if (jj_2_13(2)) {
      fSegmentMulti(pathSegments);
{if ("" != null) return new FilePathSegment(pathSegments);}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case FNAME:
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        singleSegment = fSegmentSingle();
pathSegments.addFirst(singleSegment);
            {if ("" != null) return new FilePathSegment(pathSegments);}
        break;
        }
      default:
        jj_la1[9] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private ProtagNode fSegmentSingle() throws ParseException {Token fName;
        ProtagNode segment;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FNAME:{
      fName = jj_consume_token(FNAME);
ProtagStringToken pst = (ProtagStringToken) fName;
            {if ("" != null) return new LFileName(String.valueOf(pst.getValue()));}
      break;
      }
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      segment = containedSegment();
{if ("" != null) return segment;}
      break;
      }
    default:
      jj_la1[10] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> fSegmentMulti(LinkedList<ProtagNode> pathSegments) throws ParseException {Token fName;
        ProtagNode segmentItem;
    if (jj_2_14(2)) {
      fName = jj_consume_token(FNAME);
      fSegmentExclFName(pathSegments);
ProtagStringToken pst = (ProtagStringToken) fName;
            pathSegments.addFirst(new LFileName(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
    } else if (jj_2_15(2)) {
      segmentItem = containedSegment();
      fSegmentInclFName(pathSegments);
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> fSegmentInclFName(LinkedList<ProtagNode> pathSegments) throws ParseException {Token fBody;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FNAME:{
      fBody = jj_consume_token(FNAME);
      if (jj_2_16(2147483647)) {
        fSegmentExclFName(pathSegments);
      } else {
        ;
      }
ProtagStringToken pst = (ProtagStringToken) fBody;
            pathSegments.addFirst(new LFileName(String.valueOf(pst.getValue())));
            {if ("" != null) return pathSegments;}
      break;
      }
    default:
      jj_la1[11] = jj_gen;
      if (jj_2_17(2147483647)) {
        fSegmentExclFName(pathSegments);
{if ("" != null) return pathSegments;}
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> fSegmentExclFName(LinkedList<ProtagNode> pathSegments) throws ParseException {ProtagNode segmentItem;
    segmentItem = containedSegment();
    if (jj_2_18(2147483647)) {
      fSegmentInclFName(pathSegments);
    } else {
      ;
    }
pathSegments.addFirst(segmentItem);
            {if ("" != null) return pathSegments;}
    throw new Error("Missing return statement in function");
}

  final public IProtagPath ProtagPath() throws ParseException {LinkedList<IProtagPathSegment> segments = new LinkedList<>();
        IProtagPathSegment firstPart;
        IProtagPathSegment secondPart;
        Token firstPartNat;
    if (jj_2_20(2147483647)) {
      firstPartNat = jj_consume_token(NATURAL);
      spacing();
      jj_consume_token(DOT);
      spacing();
      secondPart = protagSegmentExclNat();
      if (jj_2_19(2147483647)) {
        spacing();
        jj_consume_token(DOT);
        spacing();
        protagPathRest(segments);
      } else {
        ;
      }
// first add the second part
            segments.addFirst(secondPart);

            // then add the first part, which is a segment that just consists of the natural
            ProtagNaturalToken pnt = (ProtagNaturalToken) firstPartNat;
            LProtagNatural firstNode = new LProtagNatural(pnt.getValue());
            LinkedList<ProtagNode> nodeList = new LinkedList<>();
            nodeList.addFirst(firstNode);
            segments.addFirst(new ProtagPathSegment(nodeList));
            {if ("" != null) return new ProtagPath(segments);}
    } else if (jj_2_21(2147483647)) {
      firstPart = protagSegmentExclNat();
      spacing();
      jj_consume_token(DOT);
      spacing();
      protagPathRest(segments);
segments.addFirst(firstPart);
            {if ("" != null) return new ProtagPath(segments);}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final private IProtagPathSegment protagSegmentExclNat() throws ParseException {IProtagPathSegment segment;
        ProtagNode contained;
        Token ident;
    if (jj_2_22(2147483647)) {
      segment = ProtagPathSegment();
{if ("" != null) return segment;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        contained = containedSegment();
LinkedList<ProtagNode> segmentItems = new LinkedList<>();
            segmentItems.add(contained);
            {if ("" != null) return new ProtagPathSegment(segmentItems);}
        break;
        }
      case PNAME:{
        ident = jj_consume_token(PNAME);
ProtagStringToken pst = (ProtagStringToken) ident;

            LinkedList<ProtagNode> segmentItems = new LinkedList<>();
            segmentItems.add(new LProtagName(String.valueOf(ident.getValue())));
            {if ("" != null) return new ProtagPathSegment(segmentItems);}
        break;
        }
      default:
        jj_la1[12] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final private List<IProtagPathSegment> protagPathRest(LinkedList<IProtagPathSegment> segments) throws ParseException {IProtagPathSegment segment;
        ProtagNode singleNodeSegment;
        Token singleTokenSegment;
    if (jj_2_23(2147483647)) {
      segment = ProtagPathSegment();
segments.add(segment);
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case LIST_START:
      case PRECEDENCE_START:
      case REGEX:
      case LITERAL:{
        singleNodeSegment = containedSegment();
LinkedList<ProtagNode> segmentItems = new LinkedList<>();
                segmentItems.add(singleNodeSegment);
                segments.add(new ProtagPathSegment(segmentItems));
        break;
        }
      case PNAME:{
        singleTokenSegment = jj_consume_token(PNAME);
ProtagStringToken pst = (ProtagStringToken) singleTokenSegment;
                LinkedList<ProtagNode> segmentItems = new LinkedList<>();
                segmentItems.add(new LProtagName(String.valueOf(pst.getValue())));
                segments.add(new ProtagPathSegment(segmentItems));
        break;
        }
      case NATURAL:{
        singleTokenSegment = jj_consume_token(NATURAL);
ProtagNaturalToken pnt = (ProtagNaturalToken) singleTokenSegment;
                LinkedList<ProtagNode> segmentItems = new LinkedList<>();
                segmentItems.add(new LProtagNatural(pnt.getValue()));

                segments.add(new ProtagPathSegment(segmentItems));
        break;
        }
      default:
        jj_la1[13] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    if (jj_2_24(2147483647)) {
      spacing();
      jj_consume_token(DOT);
      spacing();
      protagPathRest(segments);
    } else {
      ;
    }
{if ("" != null) return segments;}
    throw new Error("Missing return statement in function");
}

//    ySegmentMulti ::= (containedSegment ySegmentInclVals)
    //        | ((YNAME|NATURAL) ySegmentExclVals) {methods=[isElementType]}
  final public     IProtagPathSegment ProtagPathSegment() throws ParseException {LinkedList<ProtagNode> segmentItems = new LinkedList<>();
        ProtagNode firstNodeSegmentItem;
        Token firstTokenSegmentItem;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      firstNodeSegmentItem = containedSegment();
      protagSegmentInclVals(segmentItems);
segmentItems.addFirst(firstNodeSegmentItem);
      break;
      }
    case NATURAL:
    case PNAME:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case PNAME:{
        firstTokenSegmentItem = jj_consume_token(PNAME);
ProtagStringToken pst = (ProtagStringToken) firstTokenSegmentItem;
                segmentItems.add(new LProtagName(String.valueOf(pst.getValue())));
        break;
        }
      case NATURAL:{
        firstTokenSegmentItem = jj_consume_token(NATURAL);
ProtagNaturalToken pnt = (ProtagNaturalToken) firstTokenSegmentItem;
                segmentItems.add(new LProtagNatural(pnt.getValue()));
        break;
        }
      default:
        jj_la1[14] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      protagSegmentExclVals(segmentItems);
      break;
      }
    default:
      jj_la1[15] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return new ProtagPathSegment(segmentItems);}
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> protagSegmentExclVals(LinkedList<ProtagNode> segmentItems) throws ParseException {ProtagNode segmentItem;
    segmentItem = containedSegment();
segmentItems.add(segmentItem);
    if (jj_2_25(2147483647)) {
      protagSegmentInclVals(segmentItems);
    } else {
      ;
    }
{if ("" != null) return segmentItems;}
    throw new Error("Missing return statement in function");
}

  final private List<ProtagNode> protagSegmentInclVals(LinkedList<ProtagNode> segmentItems) throws ParseException {Token firstTokenSegmentItem;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case NATURAL:
    case PBODY:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case NATURAL:{
        firstTokenSegmentItem = jj_consume_token(NATURAL);
ProtagNaturalToken pnt = (ProtagNaturalToken) firstTokenSegmentItem;
                segmentItems.add(new LProtagNatural(pnt.getValue()));
        break;
        }
      case PBODY:{
        firstTokenSegmentItem = jj_consume_token(PBODY);
ProtagStringToken pst = (ProtagStringToken) firstTokenSegmentItem;
                segmentItems.add(new LProtagBody(String.valueOf(pst.getValue())));
        break;
        }
      default:
        jj_la1[16] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_26(2147483647)) {
        protagSegmentExclVals(segmentItems);
      } else {
        ;
      }
      break;
      }
    case LIST_START:
    case PRECEDENCE_START:
    case REGEX:
    case LITERAL:{
      protagSegmentExclVals(segmentItems);
      break;
      }
    default:
      jj_la1[17] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return segmentItems;}
    throw new Error("Missing return statement in function");
}

//QUOTIENT ::= (INTEGER spacing AND spacing)? INTEGER spacing SLASH spacing NATURAL // 1 & 3/4, -1 &3/4, +1 & -3/4, 1/2
  final public LProtagQuotient ProtagQuotient() throws ParseException {XInteger intPart;
    XInteger numerator;
    Token denominator;
    if (jj_2_27(2147483647)) {
      intPart = IntegerVal();
      spacing();
      jj_consume_token(AND);
      spacing();
      numerator = IntegerVal();
      spacing();
      jj_consume_token(SLASH);
      spacing();
      denominator = jj_consume_token(NATURAL);
int integerPart = intPart.toInteger();
        // todo if denominator is zero, we should probably throw somewhere and make it more explicit to user
        Fraction fractionalPart = new Fraction(numerator.toInteger(), ((ProtagNaturalToken)denominator).getValue());
        {if ("" != null) return new LProtagQuotient(fractionalPart.add(integerPart));}
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case NATURAL:
      case PLUS:
      case MINUS:{
        numerator = IntegerVal();
        spacing();
        jj_consume_token(SLASH);
        spacing();
        denominator = jj_consume_token(NATURAL);
Fraction fractionalPart = new Fraction(numerator.toInteger(), ((ProtagNaturalToken)denominator).getValue());
        {if ("" != null) return new LProtagQuotient(fractionalPart);}
        break;
        }
      default:
        jj_la1[18] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final public XInteger IntegerVal() throws ParseException {ESignType sign = ESignType.NONE;
    Token nat;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:
    case MINUS:{
      sign = Sign();
      spacing();
      break;
      }
    default:
      jj_la1[19] = jj_gen;
      ;
    }
    nat = jj_consume_token(NATURAL);
{if ("" != null) return new XInteger(sign, ((ProtagNaturalToken)nat).getValue());}
    throw new Error("Missing return statement in function");
}

//INTEGER ::= (SIGN spacing)? NATURAL
  final public LProtagInteger ProtagInteger() throws ParseException {ESignType sign = ESignType.NONE;
    Token nat;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:
    case MINUS:{
      sign = Sign();
      spacing();
      break;
      }
    default:
      jj_la1[20] = jj_gen;
      ;
    }
    nat = jj_consume_token(NATURAL);
{if ("" != null) return new LProtagInteger(sign.negate(((ProtagNaturalToken)nat).getValue()));}
    throw new Error("Missing return statement in function");
}

//REAL ::= (SIGN spacing)? DECIMAL
  final public LProtagReal ProtagReal() throws ParseException {ESignType sign = ESignType.NONE;
    XDecimal decimal;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:
    case MINUS:{
      sign = Sign();
      spacing();
      break;
      }
    default:
      jj_la1[21] = jj_gen;
      ;
    }
    decimal = Decimal();
{if ("" != null) return new LProtagReal(decimal.toDouble(sign));}
    throw new Error("Missing return statement in function");
}

//private DECIMAL ::= NATURAL DOT NATURAL // define DECIMAL in parser rather than lexer, as this might be part of a ysegment rather than a decimal
  final public XDecimal Decimal() throws ParseException {Token integerPart;
    Token fractionalPart;
    integerPart = jj_consume_token(NATURAL);
    jj_consume_token(DOT);
    fractionalPart = jj_consume_token(NATURAL);
{if ("" != null) return new XDecimal(((ProtagNaturalToken)integerPart).getValue(), ((ProtagNaturalToken)fractionalPart).getValue());}
    throw new Error("Missing return statement in function");
}

//private SIGN ::= (PLUS|MINUS)
  final public ESignType Sign() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case PLUS:{
      jj_consume_token(PLUS);
{if ("" != null) return ESignType.PLUS;}
      break;
      }
    case MINUS:{
      jj_consume_token(MINUS);
{if ("" != null) return ESignType.MINUS;}
      break;
      }
    default:
      jj_la1[22] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

/*
//Properties ::= BaseData spacing PROPERTY_SEP (yapping_)? {
IProtagProperties ProtagProperties(IProtagProperties context) :
{
    IProtagProperties result = context == null ? new ProtagProperties() : context;
    ProtagNode name;
    IProtagSequence body;
}
{
    name=baseData() spacing() <PROPERTY_SEP> [body=ProtagSequence(parent, result)]
    {

    }
}

//Map ::= (MAP_START spacing MAP_END) // {}
//    // { a = b[, c = d]* }
//    | (MAP_START spacing PairBounded (spacing LIST_SEP spacing PairBounded)* spacing MAP_END) {
//        methods=[isElementType]
//    }
IProtagMap ProtagMap() :
{}
{
    <MAP_START> spacing() <MAP_END>
    | <MAP_START> spacing() pairBounded() (spacing() <LIST_SEP> spacing() pairBounded())* spacing() <MAP_END>
}*/

//List ::= (LIST_START LIST_END) // []
//    // [a[, b]*]
//    | LIST_START spacing BoundedData (spacing LIST_SEP spacing BoundedData)* spacing LIST_END {
//        methods=[isElement]
//    }
  final public IProtagList ProtagList() throws ParseException {LinkedList<ProtagNode> list = new LinkedList<>();
    IProtagList result = new ProtagList(list);
    ProtagNode item;
    if (jj_2_29(2147483647)) {
      jj_consume_token(LIST_START);
      spacing();
      jj_consume_token(LIST_END);
{if ("" != null) return result;}
    } else if (jj_2_30(2147483647)) {
      jj_consume_token(LIST_START);
      spacing();
      item = boundedData();
list.add(item);
      label_1:
      while (true) {
        if (jj_2_28(2147483647)) {
          ;
        } else {
          break label_1;
        }
        spacing();
        jj_consume_token(LIST_SEP);
        spacing();
        item = boundedData();
list.add(item);
      }
      spacing();
      jj_consume_token(LIST_END);
{if ("" != null) return result;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

//Precedence ::= PRECEDENCE_START spacing BoundedData spacing PRECEDENCE_END
  final public IProtagPrecedence ProtagPrecedence() throws ParseException {ProtagNode data;
    jj_consume_token(PRECEDENCE_START);
    spacing();
    data = boundedData();
    spacing();
    jj_consume_token(PRECEDENCE_END);
{if ("" != null) return new ProtagPrecedence(data);}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode unboundedData() throws ParseException {ProtagNode result;
    /*ProtagPair()
        | ProtagTransitionLeft()
        | ProtagTransitionRight()
        | */result = baseData();
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode boundedData() throws ParseException {ProtagNode result;
    /*pairBounded()
        | ProtagTransitionLeftBounded()
        | ProtagTransitionRightBounded()
        | ProtagProperties()
        | */result = baseData();
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

  final private ProtagNode containedSegment() throws ParseException {ProtagNode result;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case REGEX:{
      result = ProtagRegex();
      break;
      }
    case LITERAL:{
      result = ProtagLiteral();
      break;
      }
    case LIST_START:{
      result = ProtagList();
      break;
      }
    case PRECEDENCE_START:{
      result = ProtagPrecedence();
      break;
      }
    default:
      jj_la1[23] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

//| ProtagRegex()
//    | ProtagLiteral()
//    | ProtagIdentifier()
  final public IProtagRegex ProtagRegex() throws ParseException {Token tok;
    tok = jj_consume_token(REGEX);
ProtagStringToken pst = (ProtagStringToken) tok;
        {if ("" != null) return new LProtagRegexRaw(String.valueOf(pst.getValue()));}
    throw new Error("Missing return statement in function");
}

  final public LProtagLiteral ProtagLiteral() throws ParseException {Token tok;
    tok = jj_consume_token(LITERAL);
ProtagStringToken lit = (ProtagStringToken) tok;
        {if ("" != null) return new LProtagLiteral(String.valueOf(lit.getValue()));}
    throw new Error("Missing return statement in function");
}

  final public LProtagName ProtagName() throws ParseException {Token tok;
    tok = jj_consume_token(PNAME);
ProtagStringToken lit = (ProtagStringToken) tok;
        {if ("" != null) return new LProtagName(String.valueOf(lit.getValue()));}
    throw new Error("Missing return statement in function");
}

  final private List<LProtagLineComment> spacing() throws ParseException {List<LProtagLineComment> result = new ArrayList<>();
    LProtagLineComment comment;
    label_2:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case WHITESPACE:
      case COMMENT:{
        ;
        break;
        }
      default:
        jj_la1[24] = jj_gen;
        break label_2;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case WHITESPACE:{
        jj_consume_token(WHITESPACE);
        break;
        }
      case COMMENT:{
        comment = ProtagLineComment();
result.add(comment);
        break;
        }
      default:
        jj_la1[25] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
{if ("" != null) return result;}
    throw new Error("Missing return statement in function");
}

  final private LProtagLineComment ProtagLineComment() throws ParseException {Token comment;
    comment = jj_consume_token(COMMENT);
{if ("" != null) return new LProtagLineComment(((ProtagStringToken)comment).getValue());}
    throw new Error("Missing return statement in function");
}

  private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_1()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_2()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_3()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_4()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_5()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_6()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_7()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_8()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_9()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_10()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_11()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_12()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_13()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_14()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_15()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_16()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_17()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_18()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_19()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_20()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_21()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_22()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_23()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_24()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_25()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_26()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_27()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_28()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_29()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_30()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_3_18()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(11)) {
    jj_scanpos = xsp;
    if (jj_3R_null_326_59_18()) return true;
    }
    return false;
  }

  private boolean jj_3_19()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_ProtagPath_362_11_82()
 {
    if (jj_3R_protagSegmentExclNat_377_9_19()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_protagPathRest_405_9_94()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_749_7_33()
 {
    if (jj_3R_ProtagPrecedence_653_5_50()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_747_7_32()
 {
    if (jj_3R_ProtagList_622_5_49()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_746_7_31()
 {
    if (jj_3R_ProtagLiteral_774_5_48()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_745_7_30()
 {
    if (jj_3R_ProtagRegex_763_5_47()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentExclFName_326_41_116()
 {
    if (jj_3R_fSegmentInclFName_309_9_17()) return true;
    return false;
  }

  private boolean jj_3R_containedSegment_745_5_12()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_containedSegment_745_7_30()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_746_7_31()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_747_7_32()) {
    jj_scanpos = xsp;
    if (jj_3R_containedSegment_749_7_33()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_20()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_protagSegmentExclNat_377_9_19()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPath_349_14_93()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_protagPathRest_405_9_94()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPath_346_9_69()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPath_346_9_81()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPath_362_11_82()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagPath_346_9_81()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_protagSegmentExclNat_377_9_19()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPath_349_14_93()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_16()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3_17()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentExclFName_326_9_16()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentExclFName_326_41_116()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_309_24_118()
 {
    if (jj_3R_fSegmentExclFName_326_9_16()) return true;
    return false;
  }

  private boolean jj_3R_boundedData_706_9_25()
 {
    if (jj_3R_baseData_102_5_43()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_315_11_37()
 {
    if (jj_3R_fSegmentExclFName_326_9_16()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_309_9_36()
 {
    if (jj_scan_token(FNAME)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentInclFName_309_24_118()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_fSegmentInclFName_309_9_17()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentInclFName_309_9_36()) {
    jj_scanpos = xsp;
    if (jj_3R_fSegmentInclFName_315_11_37()) return true;
    }
    return false;
  }

  private boolean jj_3_15()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    if (jj_3R_fSegmentInclFName_309_9_17()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentMulti_290_9_15()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3_15()) return true;
    }
    return false;
  }

  private boolean jj_3_14()
 {
    if (jj_scan_token(FNAME)) return true;
    if (jj_3R_fSegmentExclFName_326_9_16()) return true;
    return false;
  }

  private boolean jj_3R_fSegmentSingle_279_11_114()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3_12()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(SLASH)) return true;
    return false;
  }

  private boolean jj_3R_fSegmentSingle_274_9_110()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fSegmentSingle_274_9_113()) {
    jj_scanpos = xsp;
    if (jj_3R_fSegmentSingle_279_11_114()) return true;
    }
    return false;
  }

  private boolean jj_3R_fSegmentSingle_274_9_113()
 {
    if (jj_scan_token(FNAME)) return true;
    return false;
  }

  private boolean jj_3R_null_219_59_14()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_fScope_243_33_98()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_fScope_243_9_84()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPrecedence_653_5_50()
 {
    if (jj_scan_token(PRECEDENCE_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_boundedData_706_9_25()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(PRECEDENCE_END)) return true;
    return false;
  }

  private boolean jj_3_28()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(LIST_SEP)) return true;
    return false;
  }

  private boolean jj_3R_FilePathSegment_261_11_108()
 {
    if (jj_3R_fSegmentSingle_274_9_110()) return true;
    return false;
  }

  private boolean jj_3_11()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(9)) {
    jj_scanpos = xsp;
    if (jj_3R_null_219_59_14()) return true;
    }
    return false;
  }

  private boolean jj_3_13()
 {
    if (jj_3R_fSegmentMulti_290_9_15()) return true;
    return false;
  }

  private boolean jj_3R_FilePathSegment_256_9_97()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3R_FilePathSegment_261_11_108()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagList_634_13_76()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(LIST_SEP)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_boundedData_706_9_25()) return true;
    return false;
  }

  private boolean jj_3_30()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_boundedData_706_9_25()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentExclJBody_219_41_115()
 {
    if (jj_3R_jSegmentInclJBody_203_9_13()) return true;
    return false;
  }

  private boolean jj_3_29()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(LIST_END)) return true;
    return false;
  }

  private boolean jj_3R_fScope_243_9_84()
 {
    if (jj_3R_FilePathSegment_256_9_97()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_fScope_243_33_98()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_ProtagList_627_7_66()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_boundedData_706_9_25()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_ProtagList_634_13_76()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(LIST_END)) return true;
    return false;
  }

  private boolean jj_3R_ProtagList_622_5_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagList_622_5_65()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagList_627_7_66()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagList_622_5_65()
 {
    if (jj_scan_token(LIST_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(LIST_END)) return true;
    return false;
  }

  private boolean jj_3R_FilePath_234_9_71()
 {
    if (jj_scan_token(FPATH_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_fScope_243_9_84()) return true;
    return false;
  }

  private boolean jj_3_9()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3_10()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentExclJBody_219_9_11()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentExclJBody_219_41_115()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_203_24_117()
 {
    if (jj_3R_jSegmentExclJBody_219_9_11()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_209_11_35()
 {
    if (jj_3R_jSegmentExclJBody_219_9_11()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_203_9_34()
 {
    if (jj_scan_token(JBODY)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentInclJBody_203_24_117()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_jSegmentInclJBody_203_9_13()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentInclJBody_203_9_34()) {
    jj_scanpos = xsp;
    if (jj_3R_jSegmentInclJBody_209_11_35()) return true;
    }
    return false;
  }

  private boolean jj_3R_Sign_580_7_45()
 {
    if (jj_scan_token(MINUS)) return true;
    return false;
  }

  private boolean jj_3_8()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    if (jj_3R_jSegmentInclJBody_203_9_13()) return true;
    return false;
  }

  private boolean jj_3R_Sign_578_5_27()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_Sign_578_5_44()) {
    jj_scanpos = xsp;
    if (jj_3R_Sign_580_7_45()) return true;
    }
    return false;
  }

  private boolean jj_3R_Sign_578_5_44()
 {
    if (jj_scan_token(PLUS)) return true;
    return false;
  }

  private boolean jj_3R_jSegmentMulti_186_9_10()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) return true;
    }
    return false;
  }

  private boolean jj_3_7()
 {
    if (jj_scan_token(JNAME)) return true;
    if (jj_3R_jSegmentExclJBody_219_9_11()) return true;
    return false;
  }

  private boolean jj_3R_Decimal_571_5_86()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_null_107_81_6()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(3)) return true;
    }
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentSingle_175_11_112()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3_5()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_ProtagReal_559_6_85()
 {
    if (jj_3R_Sign_578_5_27()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    return false;
  }

  private boolean jj_3R_ProtagReal_559_5_72()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagReal_559_6_85()) jj_scanpos = xsp;
    if (jj_3R_Decimal_571_5_86()) return true;
    return false;
  }

  private boolean jj_3R_jSegmentSingle_170_9_109()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jSegmentSingle_170_9_111()) {
    jj_scanpos = xsp;
    if (jj_3R_jSegmentSingle_175_11_112()) return true;
    }
    return false;
  }

  private boolean jj_3R_jSegmentSingle_170_9_111()
 {
    if (jj_scan_token(JNAME)) return true;
    return false;
  }

  private boolean jj_3R_jScope_141_33_96()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_jScope_141_9_83()) return true;
    return false;
  }

  private boolean jj_3R_ProtagInteger_547_6_89()
 {
    if (jj_3R_Sign_578_5_27()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    return false;
  }

  private boolean jj_3R_JavaPathSegment_158_11_107()
 {
    if (jj_3R_jSegmentSingle_170_9_109()) return true;
    return false;
  }

  private boolean jj_3R_ProtagInteger_547_5_74()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagInteger_547_6_89()) jj_scanpos = xsp;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_null_107_60_26()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_null_103_62_4()
 {
    if (jj_scan_token(NATURAL)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_protagSegmentExclNat_377_9_19()) return true;
    return false;
  }

  private boolean jj_3_6()
 {
    if (jj_3R_jSegmentMulti_186_9_10()) return true;
    return false;
  }

  private boolean jj_3R_JavaPathSegment_153_9_95()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3R_JavaPathSegment_158_11_107()) return true;
    }
    return false;
  }

  private boolean jj_3R_IntegerVal_535_6_28()
 {
    if (jj_3R_Sign_578_5_27()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    return false;
  }

  private boolean jj_3R_IntegerVal_535_5_8()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_IntegerVal_535_6_28()) jj_scanpos = xsp;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_jScope_141_9_83()
 {
    if (jj_3R_JavaPathSegment_153_9_95()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_jScope_141_33_96()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_27()
 {
    if (jj_3R_IntegerVal_535_5_8()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(AND)) return true;
    return false;
  }

  private boolean jj_3R_ProtagQuotient_523_5_88()
 {
    if (jj_3R_IntegerVal_535_5_8()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_JavaPath_133_9_70()
 {
    if (jj_scan_token(JPATH_START)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_jScope_141_9_83()) return true;
    return false;
  }

  private boolean jj_3_26()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_ProtagQuotient_514_5_73()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagQuotient_514_5_87()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagQuotient_523_5_88()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagQuotient_514_5_87()
 {
    if (jj_3R_IntegerVal_535_5_8()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(AND)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_IntegerVal_535_5_8()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(SLASH)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3_4()
 {
    if (jj_3R_IntegerVal_535_5_8()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(5)) {
    jj_scanpos = xsp;
    if (jj_scan_token(6)) return true;
    }
    return false;
  }

  private boolean jj_3R_null_112_22_7()
 {
    if (jj_3R_Sign_578_5_27()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    return false;
  }

  private boolean jj_3_3()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_112_22_7()) jj_scanpos = xsp;
    if (jj_scan_token(NATURAL)) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_null_476_38_24()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_baseData_119_11_63()
 {
    if (jj_3R_ProtagName_785_5_75()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_499_14_101()
 {
    if (jj_3R_protagSegmentExclVals_472_9_80()) return true;
    return false;
  }

  private boolean jj_3R_baseData_118_11_62()
 {
    if (jj_3R_ProtagLiteral_774_5_48()) return true;
    return false;
  }

  private boolean jj_3_2()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_107_21_5()) {
    jj_scanpos = xsp;
    if (jj_3R_null_107_81_6()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_107_21_5()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(3)) {
    jj_scanpos = xsp;
    if (jj_3R_null_107_60_26()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_baseData_117_11_61()
 {
    if (jj_3R_ProtagRegex_763_5_47()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_500_11_91()
 {
    if (jj_3R_protagSegmentExclVals_472_9_80()) return true;
    return false;
  }

  private boolean jj_3R_baseData_116_11_60()
 {
    if (jj_3R_ProtagInteger_547_5_74()) return true;
    return false;
  }

  private boolean jj_3R_baseData_114_11_59()
 {
    if (jj_3R_ProtagQuotient_514_5_73()) return true;
    return false;
  }

  private boolean jj_3_1()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_103_21_3()) {
    jj_scanpos = xsp;
    if (jj_3R_null_103_62_4()) return true;
    }
    return false;
  }

  private boolean jj_3R_null_103_21_3()
 {
    if (jj_3R_protagSegmentExclNat_377_9_19()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_494_13_100()
 {
    if (jj_scan_token(PBODY)) return true;
    return false;
  }

  private boolean jj_3R_baseData_112_11_58()
 {
    if (jj_3R_ProtagReal_559_5_72()) return true;
    return false;
  }

  private boolean jj_3R_baseData_111_11_57()
 {
    if (jj_3R_ProtagList_622_5_49()) return true;
    return false;
  }

  private boolean jj_3R_baseData_109_11_56()
 {
    if (jj_3R_ProtagPrecedence_653_5_50()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_489_13_99()
 {
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_baseData_107_11_55()
 {
    if (jj_3R_ProtagPathSegment_444_9_51()) return true;
    return false;
  }

  private boolean jj_3R_baseData_106_11_54()
 {
    if (jj_3R_FilePath_234_9_71()) return true;
    return false;
  }

  private boolean jj_3R_baseData_105_11_53()
 {
    if (jj_3R_JavaPath_133_9_70()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_488_11_90()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentInclVals_489_13_99()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentInclVals_494_13_100()) return true;
    }
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentInclVals_499_14_101()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_baseData_103_11_52()
 {
    if (jj_3R_ProtagPath_346_9_69()) return true;
    return false;
  }

  private boolean jj_3_25()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(3)) {
    jj_scanpos = xsp;
    if (jj_scan_token(12)) {
    jj_scanpos = xsp;
    if (jj_3R_null_476_38_24()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_protagSegmentInclVals_487_9_77()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentInclVals_488_11_90()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentInclVals_500_11_91()) return true;
    }
    return false;
  }

  private boolean jj_3R_baseData_102_5_43()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_baseData_103_11_52()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_105_11_53()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_106_11_54()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_107_11_55()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_109_11_56()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_111_11_57()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_112_11_58()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_114_11_59()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_116_11_60()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_117_11_61()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_118_11_62()) {
    jj_scanpos = xsp;
    if (jj_3R_baseData_119_11_63()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_null_406_83_23()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(3)) return true;
    }
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclVals_476_10_92()
 {
    if (jj_3R_protagSegmentInclVals_487_9_77()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclVals_472_9_80()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentExclVals_476_10_92()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_456_13_79()
 {
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_null_406_62_42()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_451_13_78()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_450_11_68()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPathSegment_451_13_78()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPathSegment_456_13_79()) return true;
    }
    if (jj_3R_protagSegmentExclVals_472_9_80()) return true;
    return false;
  }

  private boolean jj_3R_null_377_79_21()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(3)) return true;
    }
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3_24()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_445_9_67()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    if (jj_3R_protagSegmentInclVals_487_9_77()) return true;
    return false;
  }

  private boolean jj_3R_ProtagPathSegment_444_9_51()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_ProtagPathSegment_445_9_67()) {
    jj_scanpos = xsp;
    if (jj_3R_ProtagPathSegment_450_11_68()) return true;
    }
    return false;
  }

  private boolean jj_3R_protagPathRest_432_12_106()
 {
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_3R_protagPathRest_405_9_94()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_424_15_105()
 {
    if (jj_scan_token(NATURAL)) return true;
    return false;
  }

  private boolean jj_3R_ProtagLineComment_814_5_64()
 {
    if (jj_scan_token(COMMENT)) return true;
    return false;
  }

  private boolean jj_3R_null_377_58_41()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_417_15_104()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_null_406_23_22()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(3)) {
    jj_scanpos = xsp;
    if (jj_3R_null_406_62_42()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_23()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_406_23_22()) {
    jj_scanpos = xsp;
    if (jj_3R_null_406_83_23()) return true;
    }
    return false;
  }

  private boolean jj_3R_spacing_801_9_46()
 {
    if (jj_3R_ProtagLineComment_814_5_64()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_411_15_103()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_spacing_800_7_29()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(1)) {
    jj_scanpos = xsp;
    if (jj_3R_spacing_801_9_46()) return true;
    }
    return false;
  }

  private boolean jj_3R_spacing_800_5_9()
 {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_spacing_800_7_29()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_protagPathRest_406_13_102()
 {
    if (jj_3R_ProtagPathSegment_444_9_51()) return true;
    return false;
  }

  private boolean jj_3R_protagPathRest_405_9_94()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagPathRest_406_13_102()) {
    jj_scanpos = xsp;
    if (jj_3R_protagPathRest_411_15_103()) {
    jj_scanpos = xsp;
    if (jj_3R_protagPathRest_417_15_104()) {
    jj_scanpos = xsp;
    if (jj_3R_protagPathRest_424_15_105()) return true;
    }
    }
    }
    xsp = jj_scanpos;
    if (jj_3R_protagPathRest_432_12_106()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_ProtagName_785_5_75()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_388_11_40()
 {
    if (jj_scan_token(PNAME)) return true;
    return false;
  }

  private boolean jj_3R_null_377_19_20()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(4)) {
    jj_scanpos = xsp;
    if (jj_scan_token(3)) {
    jj_scanpos = xsp;
    if (jj_3R_null_377_58_41()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_22()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_null_377_19_20()) {
    jj_scanpos = xsp;
    if (jj_3R_null_377_79_21()) return true;
    }
    return false;
  }

  private boolean jj_3R_ProtagLiteral_774_5_48()
 {
    if (jj_scan_token(LITERAL)) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_382_11_39()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_377_9_38()
 {
    if (jj_3R_ProtagPathSegment_444_9_51()) return true;
    return false;
  }

  private boolean jj_3R_protagSegmentExclNat_377_9_19()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_protagSegmentExclNat_377_9_38()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentExclNat_382_11_39()) {
    jj_scanpos = xsp;
    if (jj_3R_protagSegmentExclNat_388_11_40()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_null_326_59_18()
 {
    if (jj_3R_containedSegment_745_5_12()) return true;
    return false;
  }

  private boolean jj_3R_ProtagRegex_763_5_47()
 {
    if (jj_scan_token(REGEX)) return true;
    return false;
  }

  private boolean jj_3_21()
 {
    if (jj_3R_protagSegmentExclNat_377_9_19()) return true;
    if (jj_3R_spacing_800_5_9()) return true;
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  /** User defined Token Manager. */
  public TokenManager token_source;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[26];
  static private int[] jj_la1_0;
  static {
	   jj_la1_init_0();
	}
	private static void jj_la1_init_0() {
	   jj_la1_0 = new int[] {0x74e49a,0x74e49a,0x74e49a,0x480,0x48000,0x306018,0x348100,0x348100,0x200,0x348800,0x348800,0x800,0x348010,0x348018,0x18,0x348018,0x1008,0x349008,0x6008,0x6000,0x6000,0x6000,0x6000,0x348000,0x400002,0x400002,};
	}
  final private JJCalls[] jj_2_rtns = new JJCalls[30];
  private boolean jj_rescan = false;
  private int jj_gc = 0;


  /** Constructor with user supplied Token Manager. */
  public ProtagParserGen(TokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 26; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(TokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 26; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
	 Token oldToken;
	 if ((oldToken = token).next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 if (token.kind == kind) {
	   jj_gen++;
	   if (++jj_gc > 100) {
		 jj_gc = 0;
		 for (int i = 0; i < jj_2_rtns.length; i++) {
		   JJCalls c = jj_2_rtns[i];
		   while (c != null) {
			 if (c.gen < jj_gen) c.first = null;
			 c = c.next;
		   }
		 }
	   }
	   return token;
	 }
	 token = oldToken;
	 jj_kind = kind;
	 throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error {
    @Override
    public Throwable fillInStackTrace() {
      return this;
    }
  }
  static private final LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
	 if (jj_scanpos == jj_lastpos) {
	   jj_la--;
	   if (jj_scanpos.next == null) {
		 jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
	   } else {
		 jj_lastpos = jj_scanpos = jj_scanpos.next;
	   }
	 } else {
	   jj_scanpos = jj_scanpos.next;
	 }
	 if (jj_rescan) {
	   int i = 0; Token tok = token;
	   while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
	   if (tok != null) jj_add_error_token(kind, i);
	 }
	 if (jj_scanpos.kind != kind) return true;
	 if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
	 return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
	 if (token.next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 jj_gen++;
	 return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
	 Token t = token;
	 for (int i = 0; i < index; i++) {
	   if (t.next != null) t = t.next;
	   else t = t.next = token_source.getNextToken();
	 }
	 return t;
  }

  private int jj_ntk_f() {
	 if ((jj_nt=token.next) == null)
	   return (jj_ntk = (token.next=token_source.getNextToken()).kind);
	 else
	   return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
	 if (pos >= 100) {
		return;
	 }

	 if (pos == jj_endpos + 1) {
	   jj_lasttokens[jj_endpos++] = kind;
	 } else if (jj_endpos != 0) {
	   jj_expentry = new int[jj_endpos];

	   for (int i = 0; i < jj_endpos; i++) {
		 jj_expentry[i] = jj_lasttokens[i];
	   }

	   for (int[] oldentry : jj_expentries) {
		 if (oldentry.length == jj_expentry.length) {
		   boolean isMatched = true;

		   for (int i = 0; i < jj_expentry.length; i++) {
			 if (oldentry[i] != jj_expentry[i]) {
			   isMatched = false;
			   break;
			 }

		   }
		   if (isMatched) {
			 jj_expentries.add(jj_expentry);
			 break;
		   }
		 }
	   }

	   if (pos != 0) {
		 jj_lasttokens[(jj_endpos = pos) - 1] = kind;
	   }
	 }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
	 jj_expentries.clear();
	 boolean[] la1tokens = new boolean[23];
	 if (jj_kind >= 0) {
	   la1tokens[jj_kind] = true;
	   jj_kind = -1;
	 }
	 for (int i = 0; i < 26; i++) {
	   if (jj_la1[i] == jj_gen) {
		 for (int j = 0; j < 32; j++) {
		   if ((jj_la1_0[i] & (1<<j)) != 0) {
			 la1tokens[j] = true;
		   }
		 }
	   }
	 }
	 for (int i = 0; i < 23; i++) {
	   if (la1tokens[i]) {
		 jj_expentry = new int[1];
		 jj_expentry[0] = i;
		 jj_expentries.add(jj_expentry);
	   }
	 }
	 jj_endpos = 0;
	 jj_rescan_token();
	 jj_add_error_token(0, 0);
	 int[][] exptokseq = new int[jj_expentries.size()][];
	 for (int i = 0; i < jj_expentries.size(); i++) {
	   exptokseq[i] = jj_expentries.get(i);
	 }
	 return new ParseException(token, exptokseq, tokenImage);
  }

  private boolean trace_enabled;

/** Trace enabled. */
  final public boolean trace_enabled() {
	 return trace_enabled;
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
	 jj_rescan = true;
	 for (int i = 0; i < 30; i++) {
	   try {
		 JJCalls p = jj_2_rtns[i];

		 do {
		   if (p.gen > jj_gen) {
			 jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
			 switch (i) {
			   case 0: jj_3_1(); break;
			   case 1: jj_3_2(); break;
			   case 2: jj_3_3(); break;
			   case 3: jj_3_4(); break;
			   case 4: jj_3_5(); break;
			   case 5: jj_3_6(); break;
			   case 6: jj_3_7(); break;
			   case 7: jj_3_8(); break;
			   case 8: jj_3_9(); break;
			   case 9: jj_3_10(); break;
			   case 10: jj_3_11(); break;
			   case 11: jj_3_12(); break;
			   case 12: jj_3_13(); break;
			   case 13: jj_3_14(); break;
			   case 14: jj_3_15(); break;
			   case 15: jj_3_16(); break;
			   case 16: jj_3_17(); break;
			   case 17: jj_3_18(); break;
			   case 18: jj_3_19(); break;
			   case 19: jj_3_20(); break;
			   case 20: jj_3_21(); break;
			   case 21: jj_3_22(); break;
			   case 22: jj_3_23(); break;
			   case 23: jj_3_24(); break;
			   case 24: jj_3_25(); break;
			   case 25: jj_3_26(); break;
			   case 26: jj_3_27(); break;
			   case 27: jj_3_28(); break;
			   case 28: jj_3_29(); break;
			   case 29: jj_3_30(); break;
			 }
		   }
		   p = p.next;
		 } while (p != null);

		 } catch(LookaheadSuccess ls) { }
	 }
	 jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
	 JJCalls p = jj_2_rtns[index];
	 while (p.gen > jj_gen) {
	   if (p.next == null) { p = p.next = new JJCalls(); break; }
	   p = p.next;
	 }

	 p.gen = jj_gen + xla - jj_la; 
	 p.first = token;
	 p.arg = xla;
  }

  static final class JJCalls {
	 int gen;
	 Token first;
	 int arg;
	 JJCalls next;
  }

}
